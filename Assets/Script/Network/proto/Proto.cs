// Generated by sprotodump. DO NOT EDIT!
// source: sproto.lua

using System;
using Sproto;
using System.Collections.Generic;

namespace ProtoSprotoType { 
	public class BeginClone {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			private cloneCardInfo _cloneCardList; // tag 1
			public cloneCardInfo cloneCardList {
				get { return _cloneCardList; }
				set { base.has_field.set_field (1, true); _cloneCardList = value; }
			}
			public bool HasCloneCardList {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					case 1:
						this.cloneCardList = base.deserialize.read_obj<cloneCardInfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.cloneCardList, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class BuyItemByShop {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _itemId; // tag 0
			public Int64 itemId {
				get { return _itemId; }
				set { base.has_field.set_field (0, true); _itemId = value; }
			}
			public bool HasItemId {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _index; // tag 2
			public Int64 index {
				get { return _index; }
				set { base.has_field.set_field (2, true); _index = value; }
			}
			public bool HasIndex {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.itemId = base.deserialize.read_integer ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.index = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.itemId, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.index, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _status; // tag 0
			public Int64 status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _itemId; // tag 1
			public Int64 itemId {
				get { return _itemId; }
				set { base.has_field.set_field (1, true); _itemId = value; }
			}
			public bool HasItemId {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_integer ();
						break;
					case 1:
						this.itemId = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.itemId, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ChangeRoleInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _name; // tag 0
			public string name {
				get { return _name; }
				set { base.has_field.set_field (0, true); _name = value; }
			}
			public bool HasName {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _sex; // tag 1
			public Int64 sex {
				get { return _sex; }
				set { base.has_field.set_field (1, true); _sex = value; }
			}
			public bool HasSex {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.name = base.deserialize.read_string ();
						break;
					case 1:
						this.sex = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.name, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.sex, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _status; // tag 0
			public Int64 status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			private string _name; // tag 1
			public string name {
				get { return _name; }
				set { base.has_field.set_field (1, true); _name = value; }
			}
			public bool HasName {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _sex; // tag 2
			public Int64 sex {
				get { return _sex; }
				set { base.has_field.set_field (2, true); _sex = value; }
			}
			public bool HasSex {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_integer ();
						break;
					case 1:
						this.name = base.deserialize.read_string ();
						break;
					case 2:
						this.sex = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.name, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.sex, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ClearMoudleInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class DeleteItem {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private bool _isAll; // tag 0
			public bool isAll {
				get { return _isAll; }
				set { base.has_field.set_field (0, true); _isAll = value; }
			}
			public bool HasIsAll {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _type; // tag 1
			public Int64 type {
				get { return _type; }
				set { base.has_field.set_field (1, true); _type = value; }
			}
			public bool HasType {
				get { return base.has_field.has_field (1); }
			}

			private string _uniqueId; // tag 2
			public string uniqueId {
				get { return _uniqueId; }
				set { base.has_field.set_field (2, true); _uniqueId = value; }
			}
			public bool HasUniqueId {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.isAll = base.deserialize.read_boolean ();
						break;
					case 1:
						this.type = base.deserialize.read_integer ();
						break;
					case 2:
						this.uniqueId = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.isAll, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.type, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.uniqueId, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetBagInfo {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private List<item1Info> _itemList1; // tag 0
			public List<item1Info> itemList1 {
				get { return _itemList1; }
				set { base.has_field.set_field (0, true); _itemList1 = value; }
			}
			public bool HasItemList1 {
				get { return base.has_field.has_field (0); }
			}

			private List<item2Info> _itemList2; // tag 1
			public List<item2Info> itemList2 {
				get { return _itemList2; }
				set { base.has_field.set_field (1, true); _itemList2 = value; }
			}
			public bool HasItemList2 {
				get { return base.has_field.has_field (1); }
			}

			private List<item3Info> _itemList3; // tag 2
			public List<item3Info> itemList3 {
				get { return _itemList3; }
				set { base.has_field.set_field (2, true); _itemList3 = value; }
			}
			public bool HasItemList3 {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.itemList1 = base.deserialize.read_obj_list<item1Info> ();
						break;
					case 1:
						this.itemList2 = base.deserialize.read_obj_list<item2Info> ();
						break;
					case 2:
						this.itemList3 = base.deserialize.read_obj_list<item3Info> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.itemList1, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.itemList2, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.itemList3, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetCloneInfo {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<cloneCardInfo> _cloneCardList; // tag 0
			public List<cloneCardInfo> cloneCardList {
				get { return _cloneCardList; }
				set { base.has_field.set_field (0, true); _cloneCardList = value; }
			}
			public bool HasCloneCardList {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.cloneCardList = base.deserialize.read_obj_list<cloneCardInfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.cloneCardList, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetGradeInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _grade; // tag 0
			public Int64 grade {
				get { return _grade; }
				set { base.has_field.set_field (0, true); _grade = value; }
			}
			public bool HasGrade {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _term; // tag 1
			public Int64 term {
				get { return _term; }
				set { base.has_field.set_field (1, true); _term = value; }
			}
			public bool HasTerm {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.grade = base.deserialize.read_integer ();
						break;
					case 1:
						this.term = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.grade, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.term, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _grade; // tag 0
			public Int64 grade {
				get { return _grade; }
				set { base.has_field.set_field (0, true); _grade = value; }
			}
			public bool HasGrade {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _term; // tag 1
			public Int64 term {
				get { return _term; }
				set { base.has_field.set_field (1, true); _term = value; }
			}
			public bool HasTerm {
				get { return base.has_field.has_field (1); }
			}

			private bool _isPay; // tag 2
			public bool isPay {
				get { return _isPay; }
				set { base.has_field.set_field (2, true); _isPay = value; }
			}
			public bool HasIsPay {
				get { return base.has_field.has_field (2); }
			}

			private List<gradeInfo> _info; // tag 3
			public List<gradeInfo> info {
				get { return _info; }
				set { base.has_field.set_field (3, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.grade = base.deserialize.read_integer ();
						break;
					case 1:
						this.term = base.deserialize.read_integer ();
						break;
					case 2:
						this.isPay = base.deserialize.read_boolean ();
						break;
					case 3:
						this.info = base.deserialize.read_obj_list<gradeInfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.grade, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.term, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_boolean (this.isPay, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_obj (this.info, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetHistoryAccumulate {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<Int64> _historyList; // tag 0
			public List<Int64> historyList {
				get { return _historyList; }
				set { base.has_field.set_field (0, true); _historyList = value; }
			}
			public bool HasHistoryList {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.historyList = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.historyList, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetLearnInfo {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _sure; // tag 0
			public bool sure {
				get { return _sure; }
				set { base.has_field.set_field (0, true); _sure = value; }
			}
			public bool HasSure {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.sure = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.sure, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetLevelPassInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			private List<passUnit> _passList; // tag 1
			public List<passUnit> passList {
				get { return _passList; }
				set { base.has_field.set_field (1, true); _passList = value; }
			}
			public bool HasPassList {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 1:
						this.passList = base.deserialize.read_obj_list<passUnit> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.passList, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetModuleFourInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private scoreBaseInfo _info; // tag 0
			public scoreBaseInfo info {
				get { return _info; }
				set { base.has_field.set_field (0, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.info = base.deserialize.read_obj<scoreBaseInfo> ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.info, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetMoudleInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetMoudleReward {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _star; // tag 1
			public Int64 star {
				get { return _star; }
				set { base.has_field.set_field (1, true); _star = value; }
			}
			public bool HasStar {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 1:
						this.star = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.star, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			private itemInfoUnit _rewardInfo; // tag 2
			public itemInfoUnit rewardInfo {
				get { return _rewardInfo; }
				set { base.has_field.set_field (2, true); _rewardInfo = value; }
			}
			public bool HasRewardInfo {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 2:
						this.rewardInfo = base.deserialize.read_obj<itemInfoUnit> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.rewardInfo, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetNoticeInfo {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private string _title; // tag 0
			public string title {
				get { return _title; }
				set { base.has_field.set_field (0, true); _title = value; }
			}
			public bool HasTitle {
				get { return base.has_field.has_field (0); }
			}

			private string _content; // tag 1
			public string content {
				get { return _content; }
				set { base.has_field.set_field (1, true); _content = value; }
			}
			public bool HasContent {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _itemId; // tag 2
			public Int64 itemId {
				get { return _itemId; }
				set { base.has_field.set_field (2, true); _itemId = value; }
			}
			public bool HasItemId {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _itemNum; // tag 3
			public Int64 itemNum {
				get { return _itemNum; }
				set { base.has_field.set_field (3, true); _itemNum = value; }
			}
			public bool HasItemNum {
				get { return base.has_field.has_field (3); }
			}

			private bool _Received; // tag 4
			public bool Received {
				get { return _Received; }
				set { base.has_field.set_field (4, true); _Received = value; }
			}
			public bool HasReceived {
				get { return base.has_field.has_field (4); }
			}

			private bool _status; // tag 5
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (5, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (5); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.title = base.deserialize.read_string ();
						break;
					case 1:
						this.content = base.deserialize.read_string ();
						break;
					case 2:
						this.itemId = base.deserialize.read_integer ();
						break;
					case 3:
						this.itemNum = base.deserialize.read_integer ();
						break;
					case 4:
						this.Received = base.deserialize.read_boolean ();
						break;
					case 5:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.title, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.content, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.itemId, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.itemNum, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_boolean (this.Received, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_boolean (this.status, 5);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetResultInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _order; // tag 1
			public Int64 order {
				get { return _order; }
				set { base.has_field.set_field (1, true); _order = value; }
			}
			public bool HasOrder {
				get { return base.has_field.has_field (1); }
			}

			private List<Int64> _score; // tag 2
			public List<Int64> score {
				get { return _score; }
				set { base.has_field.set_field (2, true); _score = value; }
			}
			public bool HasScore {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 1:
						this.order = base.deserialize.read_integer ();
						break;
					case 2:
						this.score = base.deserialize.read_integer_list ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.order, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.score, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetShopList {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private List<shop1UnitInfo> _shopList1; // tag 0
			public List<shop1UnitInfo> shopList1 {
				get { return _shopList1; }
				set { base.has_field.set_field (0, true); _shopList1 = value; }
			}
			public bool HasShopList1 {
				get { return base.has_field.has_field (0); }
			}

			private List<shop2UnitInfo> _shopList2; // tag 1
			public List<shop2UnitInfo> shopList2 {
				get { return _shopList2; }
				set { base.has_field.set_field (1, true); _shopList2 = value; }
			}
			public bool HasShopList2 {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.shopList1 = base.deserialize.read_obj_list<shop1UnitInfo> ();
						break;
					case 1:
						this.shopList2 = base.deserialize.read_obj_list<shop2UnitInfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.shopList1, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.shopList2, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetTermPassInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<unitPass> _unitPassList; // tag 0
			public List<unitPass> unitPassList {
				get { return _unitPassList; }
				set { base.has_field.set_field (0, true); _unitPassList = value; }
			}
			public bool HasUnitPassList {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.unitPassList = base.deserialize.read_obj_list<unitPass> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.unitPassList, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetTimeScoreInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _day; // tag 0
			public Int64 day {
				get { return _day; }
				set { base.has_field.set_field (0, true); _day = value; }
			}
			public bool HasDay {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.day = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.day, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private scoreBaseInfo _info; // tag 0
			public scoreBaseInfo info {
				get { return _info; }
				set { base.has_field.set_field (0, true); _info = value; }
			}
			public bool HasInfo {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.info = base.deserialize.read_obj<scoreBaseInfo> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.info, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class GetUnitPassInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private List<unitPass> _moudlePassList; // tag 0
			public List<unitPass> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (0, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudlePassList = base.deserialize.read_obj_list<unitPass> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudlePassList, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class ReceiveNoticeReward {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SaveMoudleCostTime {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _time; // tag 1
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (1, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 1:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.time, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SendLearnResultInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private moudle_base _moudleBase; // tag 0
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (0, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _moudleTotal; // tag 1
			public Int64 moudleTotal {
				get { return _moudleTotal; }
				set { base.has_field.set_field (1, true); _moudleTotal = value; }
			}
			public bool HasMoudleTotal {
				get { return base.has_field.has_field (1); }
			}

			private scoreUnit _scoreInfo; // tag 2
			public scoreUnit scoreInfo {
				get { return _scoreInfo; }
				set { base.has_field.set_field (2, true); _scoreInfo = value; }
			}
			public bool HasScoreInfo {
				get { return base.has_field.has_field (2); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 1:
						this.moudleTotal = base.deserialize.read_integer ();
						break;
					case 2:
						this.scoreInfo = base.deserialize.read_obj<scoreUnit> ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.moudleBase, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.moudleTotal, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.scoreInfo, 2);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _addDiamond; // tag 1
			public Int64 addDiamond {
				get { return _addDiamond; }
				set { base.has_field.set_field (1, true); _addDiamond = value; }
			}
			public bool HasAddDiamond {
				get { return base.has_field.has_field (1); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					case 1:
						this.addDiamond = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.addDiamond, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncDiamond {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private Int64 _Diamond; // tag 0
			public Int64 Diamond {
				get { return _Diamond; }
				set { base.has_field.set_field (0, true); _Diamond = value; }
			}
			public bool HasDiamond {
				get { return base.has_field.has_field (0); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.Diamond = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.Diamond, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle1Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private string _statement; // tag 1
			public string statement {
				get { return _statement; }
				set { base.has_field.set_field (1, true); _statement = value; }
			}
			public bool HasStatement {
				get { return base.has_field.has_field (1); }
			}

			private string _cStatement; // tag 2
			public string cStatement {
				get { return _cStatement; }
				set { base.has_field.set_field (2, true); _cStatement = value; }
			}
			public bool HasCStatement {
				get { return base.has_field.has_field (2); }
			}

			private string _voice; // tag 3
			public string voice {
				get { return _voice; }
				set { base.has_field.set_field (3, true); _voice = value; }
			}
			public bool HasVoice {
				get { return base.has_field.has_field (3); }
			}

			private List<table14Info> _contentInfo; // tag 4
			public List<table14Info> contentInfo {
				get { return _contentInfo; }
				set { base.has_field.set_field (4, true); _contentInfo = value; }
			}
			public bool HasContentInfo {
				get { return base.has_field.has_field (4); }
			}

			private moudle_base _moudleBase; // tag 5
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (5, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (5); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 6
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (6, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _time; // tag 7
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (7, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (7); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.statement = base.deserialize.read_string ();
						break;
					case 2:
						this.cStatement = base.deserialize.read_string ();
						break;
					case 3:
						this.voice = base.deserialize.read_string ();
						break;
					case 4:
						this.contentInfo = base.deserialize.read_obj_list<table14Info> ();
						break;
					case 5:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 6:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 7:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.statement, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.cStatement, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.voice, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.contentInfo, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.moudleBase, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_obj (this.moudlePassList, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.time, 7);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle2Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 8;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private List<string> _cStatements; // tag 1
			public List<string> cStatements {
				get { return _cStatements; }
				set { base.has_field.set_field (1, true); _cStatements = value; }
			}
			public bool HasCStatements {
				get { return base.has_field.has_field (1); }
			}

			private List<string> _statements; // tag 2
			public List<string> statements {
				get { return _statements; }
				set { base.has_field.set_field (2, true); _statements = value; }
			}
			public bool HasStatements {
				get { return base.has_field.has_field (2); }
			}

			private List<string> _voices; // tag 3
			public List<string> voices {
				get { return _voices; }
				set { base.has_field.set_field (3, true); _voices = value; }
			}
			public bool HasVoices {
				get { return base.has_field.has_field (3); }
			}

			private List<table10Info> _contentInfo; // tag 4
			public List<table10Info> contentInfo {
				get { return _contentInfo; }
				set { base.has_field.set_field (4, true); _contentInfo = value; }
			}
			public bool HasContentInfo {
				get { return base.has_field.has_field (4); }
			}

			private moudle_base _moudleBase; // tag 5
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (5, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (5); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 6
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (6, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (6); }
			}

			private Int64 _time; // tag 7
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (7, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (7); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.cStatements = base.deserialize.read_string_list ();
						break;
					case 2:
						this.statements = base.deserialize.read_string_list ();
						break;
					case 3:
						this.voices = base.deserialize.read_string_list ();
						break;
					case 4:
						this.contentInfo = base.deserialize.read_obj_list<table10Info> ();
						break;
					case 5:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 6:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 7:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.cStatements, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.statements, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.voices, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_obj (this.contentInfo, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.moudleBase, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_obj (this.moudlePassList, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_integer (this.time, 7);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle3Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 9;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private List<string> _cStatements; // tag 1
			public List<string> cStatements {
				get { return _cStatements; }
				set { base.has_field.set_field (1, true); _cStatements = value; }
			}
			public bool HasCStatements {
				get { return base.has_field.has_field (1); }
			}

			private List<string> _statements; // tag 2
			public List<string> statements {
				get { return _statements; }
				set { base.has_field.set_field (2, true); _statements = value; }
			}
			public bool HasStatements {
				get { return base.has_field.has_field (2); }
			}

			private List<string> _voices; // tag 3
			public List<string> voices {
				get { return _voices; }
				set { base.has_field.set_field (3, true); _voices = value; }
			}
			public bool HasVoices {
				get { return base.has_field.has_field (3); }
			}

			private List<string> _steps; // tag 4
			public List<string> steps {
				get { return _steps; }
				set { base.has_field.set_field (4, true); _steps = value; }
			}
			public bool HasSteps {
				get { return base.has_field.has_field (4); }
			}

			private List<table11Info> _contentInfo; // tag 5
			public List<table11Info> contentInfo {
				get { return _contentInfo; }
				set { base.has_field.set_field (5, true); _contentInfo = value; }
			}
			public bool HasContentInfo {
				get { return base.has_field.has_field (5); }
			}

			private moudle_base _moudleBase; // tag 6
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (6, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (6); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 7
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (7, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (7); }
			}

			private Int64 _time; // tag 8
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (8, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (8); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.cStatements = base.deserialize.read_string_list ();
						break;
					case 2:
						this.statements = base.deserialize.read_string_list ();
						break;
					case 3:
						this.voices = base.deserialize.read_string_list ();
						break;
					case 4:
						this.steps = base.deserialize.read_string_list ();
						break;
					case 5:
						this.contentInfo = base.deserialize.read_obj_list<table11Info> ();
						break;
					case 6:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 7:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 8:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.cStatements, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.statements, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.voices, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.steps, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.contentInfo, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_obj (this.moudleBase, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_obj (this.moudlePassList, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.time, 8);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle4Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private List<table4Info> _infoList; // tag 0
			public List<table4Info> infoList {
				get { return _infoList; }
				set { base.has_field.set_field (0, true); _infoList = value; }
			}
			public bool HasInfoList {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 2
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (2, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _time; // tag 3
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (3, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.infoList = base.deserialize.read_obj_list<table4Info> ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 2:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 3:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.infoList, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.moudlePassList, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.time, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle5Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private List<table5Info> _infoList; // tag 0
			public List<table5Info> infoList {
				get { return _infoList; }
				set { base.has_field.set_field (0, true); _infoList = value; }
			}
			public bool HasInfoList {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 3
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (2, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _time; // tag 4
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (3, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.infoList = base.deserialize.read_obj_list<table5Info> ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 3:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 4:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.infoList, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.moudlePassList, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.time, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle6Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private List<table6Info> _infoList; // tag 0
			public List<table6Info> infoList {
				get { return _infoList; }
				set { base.has_field.set_field (0, true); _infoList = value; }
			}
			public bool HasInfoList {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 2
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (2, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _time; // tag 3
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (3, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.infoList = base.deserialize.read_obj_list<table6Info> ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 2:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 3:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.infoList, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.moudlePassList, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.time, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle7Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private List<table7Info> _infoList; // tag 0
			public List<table7Info> infoList {
				get { return _infoList; }
				set { base.has_field.set_field (0, true); _infoList = value; }
			}
			public bool HasInfoList {
				get { return base.has_field.has_field (0); }
			}

			private moudle_base _moudleBase; // tag 1
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (1, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (1); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 3
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (2, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _time; // tag 4
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (3, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (3); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.infoList = base.deserialize.read_obj_list<table7Info> ();
						break;
					case 1:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 3:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 4:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_obj (this.infoList, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_obj (this.moudleBase, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_obj (this.moudlePassList, 3);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.time, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncMoudle8Info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 12;
			
			
			private Int64 _id; // tag 0
			public Int64 id {
				get { return _id; }
				set { base.has_field.set_field (0, true); _id = value; }
			}
			public bool HasId {
				get { return base.has_field.has_field (0); }
			}

			private List<string> _cStatements; // tag 1
			public List<string> cStatements {
				get { return _cStatements; }
				set { base.has_field.set_field (1, true); _cStatements = value; }
			}
			public bool HasCStatements {
				get { return base.has_field.has_field (1); }
			}

			private List<string> _statements; // tag 2
			public List<string> statements {
				get { return _statements; }
				set { base.has_field.set_field (2, true); _statements = value; }
			}
			public bool HasStatements {
				get { return base.has_field.has_field (2); }
			}

			private List<string> _voice; // tag 3
			public List<string> voice {
				get { return _voice; }
				set { base.has_field.set_field (3, true); _voice = value; }
			}
			public bool HasVoice {
				get { return base.has_field.has_field (3); }
			}

			private List<string> _weight; // tag 4
			public List<string> weight {
				get { return _weight; }
				set { base.has_field.set_field (4, true); _weight = value; }
			}
			public bool HasWeight {
				get { return base.has_field.has_field (4); }
			}

			private List<table10Info> _contentInfo1; // tag 5
			public List<table10Info> contentInfo1 {
				get { return _contentInfo1; }
				set { base.has_field.set_field (5, true); _contentInfo1 = value; }
			}
			public bool HasContentInfo1 {
				get { return base.has_field.has_field (5); }
			}

			private List<table13Info> _contentInfo2; // tag 6
			public List<table13Info> contentInfo2 {
				get { return _contentInfo2; }
				set { base.has_field.set_field (6, true); _contentInfo2 = value; }
			}
			public bool HasContentInfo2 {
				get { return base.has_field.has_field (6); }
			}

			private moudle_base _moudleBase; // tag 7
			public moudle_base moudleBase {
				get { return _moudleBase; }
				set { base.has_field.set_field (7, true); _moudleBase = value; }
			}
			public bool HasMoudleBase {
				get { return base.has_field.has_field (7); }
			}

			private List<Int64> _scores; // tag 8
			public List<Int64> scores {
				get { return _scores; }
				set { base.has_field.set_field (8, true); _scores = value; }
			}
			public bool HasScores {
				get { return base.has_field.has_field (8); }
			}

			private List<table10Info> _randomWordList; // tag 9
			public List<table10Info> randomWordList {
				get { return _randomWordList; }
				set { base.has_field.set_field (9, true); _randomWordList = value; }
			}
			public bool HasRandomWordList {
				get { return base.has_field.has_field (9); }
			}

			private List<moudlePassUnit> _moudlePassList; // tag 10
			public List<moudlePassUnit> moudlePassList {
				get { return _moudlePassList; }
				set { base.has_field.set_field (10, true); _moudlePassList = value; }
			}
			public bool HasMoudlePassList {
				get { return base.has_field.has_field (10); }
			}

			private Int64 _time; // tag 11
			public Int64 time {
				get { return _time; }
				set { base.has_field.set_field (11, true); _time = value; }
			}
			public bool HasTime {
				get { return base.has_field.has_field (11); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.id = base.deserialize.read_integer ();
						break;
					case 1:
						this.cStatements = base.deserialize.read_string_list ();
						break;
					case 2:
						this.statements = base.deserialize.read_string_list ();
						break;
					case 3:
						this.voice = base.deserialize.read_string_list ();
						break;
					case 4:
						this.weight = base.deserialize.read_string_list ();
						break;
					case 5:
						this.contentInfo1 = base.deserialize.read_obj_list<table10Info> ();
						break;
					case 6:
						this.contentInfo2 = base.deserialize.read_obj_list<table13Info> ();
						break;
					case 7:
						this.moudleBase = base.deserialize.read_obj<moudle_base> ();
						break;
					case 8:
						this.scores = base.deserialize.read_integer_list ();
						break;
					case 9:
						this.randomWordList = base.deserialize.read_obj_list<table10Info> ();
						break;
					case 10:
						this.moudlePassList = base.deserialize.read_obj_list<moudlePassUnit> ();
						break;
					case 11:
						this.time = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.id, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.cStatements, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.statements, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.voice, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.weight, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_obj (this.contentInfo1, 5);
				}

				if (base.has_field.has_field (6)) {
					base.serialize.write_obj (this.contentInfo2, 6);
				}

				if (base.has_field.has_field (7)) {
					base.serialize.write_obj (this.moudleBase, 7);
				}

				if (base.has_field.has_field (8)) {
					base.serialize.write_integer (this.scores, 8);
				}

				if (base.has_field.has_field (9)) {
					base.serialize.write_obj (this.randomWordList, 9);
				}

				if (base.has_field.has_field (10)) {
					base.serialize.write_obj (this.moudlePassList, 10);
				}

				if (base.has_field.has_field (11)) {
					base.serialize.write_integer (this.time, 11);
				}

				return base.serialize.close ();
			}
		}


	}


	public class SyncPayInfo {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _grade; // tag 0
			public Int64 grade {
				get { return _grade; }
				set { base.has_field.set_field (0, true); _grade = value; }
			}
			public bool HasGrade {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _term; // tag 1
			public Int64 term {
				get { return _term; }
				set { base.has_field.set_field (1, true); _term = value; }
			}
			public bool HasTerm {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.grade = base.deserialize.read_integer ();
						break;
					case 1:
						this.term = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.grade, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.term, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class attribute : SprotoTypeBase {
		private static int max_field_count = 13;
		
		
		private Int64 _level; // tag 0
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (0, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _exp; // tag 1
		public Int64 exp {
			get { return _exp; }
			set { base.has_field.set_field (1, true); _exp = value; }
		}
		public bool HasExp {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _ce; // tag 2
		public Int64 ce {
			get { return _ce; }
			set { base.has_field.set_field (2, true); _ce = value; }
		}
		public bool HasCe {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _hp; // tag 3
		public Int64 hp {
			get { return _hp; }
			set { base.has_field.set_field (3, true); _hp = value; }
		}
		public bool HasHp {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _hp_max; // tag 4
		public Int64 hp_max {
			get { return _hp_max; }
			set { base.has_field.set_field (4, true); _hp_max = value; }
		}
		public bool HasHp_max {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _atk; // tag 5
		public Int64 atk {
			get { return _atk; }
			set { base.has_field.set_field (5, true); _atk = value; }
		}
		public bool HasAtk {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _def; // tag 6
		public Int64 def {
			get { return _def; }
			set { base.has_field.set_field (6, true); _def = value; }
		}
		public bool HasDef {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _mspd; // tag 7
		public Int64 mspd {
			get { return _mspd; }
			set { base.has_field.set_field (7, true); _mspd = value; }
		}
		public bool HasMspd {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _aspd; // tag 8
		public Int64 aspd {
			get { return _aspd; }
			set { base.has_field.set_field (8, true); _aspd = value; }
		}
		public bool HasAspd {
			get { return base.has_field.has_field (8); }
		}

		private Int64 _cri; // tag 9
		public Int64 cri {
			get { return _cri; }
			set { base.has_field.set_field (9, true); _cri = value; }
		}
		public bool HasCri {
			get { return base.has_field.has_field (9); }
		}

		private Int64 _avo; // tag 10
		public Int64 avo {
			get { return _avo; }
			set { base.has_field.set_field (10, true); _avo = value; }
		}
		public bool HasAvo {
			get { return base.has_field.has_field (10); }
		}

		private Int64 _resilence; // tag 11
		public Int64 resilence {
			get { return _resilence; }
			set { base.has_field.set_field (11, true); _resilence = value; }
		}
		public bool HasResilence {
			get { return base.has_field.has_field (11); }
		}

		private Int64 _recovery; // tag 12
		public Int64 recovery {
			get { return _recovery; }
			set { base.has_field.set_field (12, true); _recovery = value; }
		}
		public bool HasRecovery {
			get { return base.has_field.has_field (12); }
		}

		public attribute () : base(max_field_count) {}

		public attribute (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.level = base.deserialize.read_integer ();
					break;
				case 1:
					this.exp = base.deserialize.read_integer ();
					break;
				case 2:
					this.ce = base.deserialize.read_integer ();
					break;
				case 3:
					this.hp = base.deserialize.read_integer ();
					break;
				case 4:
					this.hp_max = base.deserialize.read_integer ();
					break;
				case 5:
					this.atk = base.deserialize.read_integer ();
					break;
				case 6:
					this.def = base.deserialize.read_integer ();
					break;
				case 7:
					this.mspd = base.deserialize.read_integer ();
					break;
				case 8:
					this.aspd = base.deserialize.read_integer ();
					break;
				case 9:
					this.cri = base.deserialize.read_integer ();
					break;
				case 10:
					this.avo = base.deserialize.read_integer ();
					break;
				case 11:
					this.resilence = base.deserialize.read_integer ();
					break;
				case 12:
					this.recovery = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.level, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.exp, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.ce, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.hp, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.hp_max, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.atk, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.def, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.mspd, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.aspd, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_integer (this.cri, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_integer (this.avo, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_integer (this.resilence, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_integer (this.recovery, 12);
			}

			return base.serialize.close ();
		}
	}


	public class auth {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _challenge; // tag 0
			public string challenge {
				get { return _challenge; }
				set { base.has_field.set_field (0, true); _challenge = value; }
			}
			public bool HasChallenge {
				get { return base.has_field.has_field (0); }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}
			public bool HasPassword {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.challenge = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.challenge, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 3;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _expire; // tag 1
			public Int64 expire {
				get { return _expire; }
				set { base.has_field.set_field (1, true); _expire = value; }
			}
			public bool HasExpire {
				get { return base.has_field.has_field (1); }
			}

			private string _challenge; // tag 2
			public string challenge {
				get { return _challenge; }
				set { base.has_field.set_field (2, true); _challenge = value; }
			}
			public bool HasChallenge {
				get { return base.has_field.has_field (2); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.expire = base.deserialize.read_integer ();
						break;
					case 2:
						this.challenge = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.expire, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.challenge, 2);
				}

				return base.serialize.close ();
			}
		}


	}


	public class challenge {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private string _challenge; // tag 1
			public string challenge {
				get { return _challenge; }
				set { base.has_field.set_field (1, true); _challenge = value; }
			}
			public bool HasChallenge {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.challenge = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.challenge, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private string _token; // tag 0
			public string token {
				get { return _token; }
				set { base.has_field.set_field (0, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (0); }
			}

			private string _challenge; // tag 1
			public string challenge {
				get { return _challenge; }
				set { base.has_field.set_field (1, true); _challenge = value; }
			}
			public bool HasChallenge {
				get { return base.has_field.has_field (1); }
			}

			private string _ip; // tag 2
			public string ip {
				get { return _ip; }
				set { base.has_field.set_field (2, true); _ip = value; }
			}
			public bool HasIp {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _port; // tag 3
			public Int64 port {
				get { return _port; }
				set { base.has_field.set_field (3, true); _port = value; }
			}
			public bool HasPort {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.token = base.deserialize.read_string ();
						break;
					case 1:
						this.challenge = base.deserialize.read_string ();
						break;
					case 2:
						this.ip = base.deserialize.read_string ();
						break;
					case 3:
						this.port = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.token, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.challenge, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.ip, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.port, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class client_user_info {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 5;
			
			
			private Int64 _ID; // tag 0
			public Int64 ID {
				get { return _ID; }
				set { base.has_field.set_field (0, true); _ID = value; }
			}
			public bool HasID {
				get { return base.has_field.has_field (0); }
			}

			private string _NickName; // tag 1
			public string NickName {
				get { return _NickName; }
				set { base.has_field.set_field (1, true); _NickName = value; }
			}
			public bool HasNickName {
				get { return base.has_field.has_field (1); }
			}

			private bool _IsTraveler; // tag 2
			public bool IsTraveler {
				get { return _IsTraveler; }
				set { base.has_field.set_field (2, true); _IsTraveler = value; }
			}
			public bool HasIsTraveler {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _Sex; // tag 3
			public Int64 Sex {
				get { return _Sex; }
				set { base.has_field.set_field (3, true); _Sex = value; }
			}
			public bool HasSex {
				get { return base.has_field.has_field (3); }
			}

			private Int64 _Diamond; // tag 4
			public Int64 Diamond {
				get { return _Diamond; }
				set { base.has_field.set_field (4, true); _Diamond = value; }
			}
			public bool HasDiamond {
				get { return base.has_field.has_field (4); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.ID = base.deserialize.read_integer ();
						break;
					case 1:
						this.NickName = base.deserialize.read_string ();
						break;
					case 2:
						this.IsTraveler = base.deserialize.read_boolean ();
						break;
					case 3:
						this.Sex = base.deserialize.read_integer ();
						break;
					case 4:
						this.Diamond = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.ID, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.NickName, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_boolean (this.IsTraveler, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.Sex, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_integer (this.Diamond, 4);
				}

				return base.serialize.close ();
			}
		}


	}


	public class cloneCardInfo : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private Int64 _num; // tag 0
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (0, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _timestamp; // tag 1
		public Int64 timestamp {
			get { return _timestamp; }
			set { base.has_field.set_field (1, true); _timestamp = value; }
		}
		public bool HasTimestamp {
			get { return base.has_field.has_field (1); }
		}

		private List<item3Info> _info; // tag 2
		public List<item3Info> info {
			get { return _info; }
			set { base.has_field.set_field (2, true); _info = value; }
		}
		public bool HasInfo {
			get { return base.has_field.has_field (2); }
		}

		public cloneCardInfo () : base(max_field_count) {}

		public cloneCardInfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.num = base.deserialize.read_integer ();
					break;
				case 1:
					this.timestamp = base.deserialize.read_integer ();
					break;
				case 2:
					this.info = base.deserialize.read_obj_list<item3Info> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.num, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.timestamp, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_obj (this.info, 2);
			}

			return base.serialize.close ();
		}
	}


	public class gradeInfo : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _unit; // tag 3
		public Int64 unit {
			get { return _unit; }
			set { base.has_field.set_field (0, true); _unit = value; }
		}
		public bool HasUnit {
			get { return base.has_field.has_field (0); }
		}

		private string _uText; // tag 4
		public string uText {
			get { return _uText; }
			set { base.has_field.set_field (1, true); _uText = value; }
		}
		public bool HasUText {
			get { return base.has_field.has_field (1); }
		}

		private List<double> _moudle; // tag 5
		public List<double> moudle {
			get { return _moudle; }
			set { base.has_field.set_field (2, true); _moudle = value; }
		}
		public bool HasMoudle {
			get { return base.has_field.has_field (2); }
		}

		public gradeInfo () : base(max_field_count) {}

		public gradeInfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 3:
					this.unit = base.deserialize.read_integer ();
					break;
				case 4:
					this.uText = base.deserialize.read_string ();
					break;
				case 5:
					this.moudle = base.deserialize.read_decimal_list (10.0);
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.unit, 3);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.uText, 4);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_decimal (this.moudle, 10.0, 5);
			}

			return base.serialize.close ();
		}
	}


	public class handshake {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _client_pub; // tag 1
			public string client_pub {
				get { return _client_pub; }
				set { base.has_field.set_field (1, true); _client_pub = value; }
			}
			public bool HasClient_pub {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.client_pub = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.client_pub, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private bool _user_exists; // tag 0
			public bool user_exists {
				get { return _user_exists; }
				set { base.has_field.set_field (0, true); _user_exists = value; }
			}
			public bool HasUser_exists {
				get { return base.has_field.has_field (0); }
			}

			private string _salt; // tag 1
			public string salt {
				get { return _salt; }
				set { base.has_field.set_field (1, true); _salt = value; }
			}
			public bool HasSalt {
				get { return base.has_field.has_field (1); }
			}

			private string _server_pub; // tag 2
			public string server_pub {
				get { return _server_pub; }
				set { base.has_field.set_field (2, true); _server_pub = value; }
			}
			public bool HasServer_pub {
				get { return base.has_field.has_field (2); }
			}

			private string _challenge; // tag 3
			public string challenge {
				get { return _challenge; }
				set { base.has_field.set_field (3, true); _challenge = value; }
			}
			public bool HasChallenge {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.user_exists = base.deserialize.read_boolean ();
						break;
					case 1:
						this.salt = base.deserialize.read_string ();
						break;
					case 2:
						this.server_pub = base.deserialize.read_string ();
						break;
					case 3:
						this.challenge = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.user_exists, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.salt, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.server_pub, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_string (this.challenge, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class heartbeat {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 1;
			
			
			private bool _status; // tag 0
			public bool status {
				get { return _status; }
				set { base.has_field.set_field (0, true); _status = value; }
			}
			public bool HasStatus {
				get { return base.has_field.has_field (0); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.status = base.deserialize.read_boolean ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_boolean (this.status, 0);
				}

				return base.serialize.close ();
			}
		}


	}


	public class item1Info : SprotoTypeBase {
		private static int max_field_count = 8;
		
		
		private Int64 _Id; // tag 0
		public Int64 Id {
			get { return _Id; }
			set { base.has_field.set_field (0, true); _Id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _Name; // tag 1
		public string Name {
			get { return _Name; }
			set { base.has_field.set_field (1, true); _Name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private string _Depict; // tag 2
		public string Depict {
			get { return _Depict; }
			set { base.has_field.set_field (2, true); _Depict = value; }
		}
		public bool HasDepict {
			get { return base.has_field.has_field (2); }
		}

		private string _Icon; // tag 3
		public string Icon {
			get { return _Icon; }
			set { base.has_field.set_field (3, true); _Icon = value; }
		}
		public bool HasIcon {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _type; // tag 4
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (4, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (4); }
		}

		private string _uniqueId; // tag 5
		public string uniqueId {
			get { return _uniqueId; }
			set { base.has_field.set_field (5, true); _uniqueId = value; }
		}
		public bool HasUniqueId {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _Value; // tag 6
		public Int64 Value {
			get { return _Value; }
			set { base.has_field.set_field (6, true); _Value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _timestamp; // tag 7
		public Int64 timestamp {
			get { return _timestamp; }
			set { base.has_field.set_field (7, true); _timestamp = value; }
		}
		public bool HasTimestamp {
			get { return base.has_field.has_field (7); }
		}

		public item1Info () : base(max_field_count) {}

		public item1Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.Id = base.deserialize.read_integer ();
					break;
				case 1:
					this.Name = base.deserialize.read_string ();
					break;
				case 2:
					this.Depict = base.deserialize.read_string ();
					break;
				case 3:
					this.Icon = base.deserialize.read_string ();
					break;
				case 4:
					this.type = base.deserialize.read_integer ();
					break;
				case 5:
					this.uniqueId = base.deserialize.read_string ();
					break;
				case 6:
					this.Value = base.deserialize.read_integer ();
					break;
				case 7:
					this.timestamp = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.Id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.Name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.Depict, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.Icon, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.type, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.uniqueId, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.Value, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.timestamp, 7);
			}

			return base.serialize.close ();
		}
	}


	public class item2Info : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _itemId; // tag 0
		public Int64 itemId {
			get { return _itemId; }
			set { base.has_field.set_field (0, true); _itemId = value; }
		}
		public bool HasItemId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _type; // tag 2
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (2, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (2); }
		}

		private string _Name; // tag 3
		public string Name {
			get { return _Name; }
			set { base.has_field.set_field (3, true); _Name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (3); }
		}

		private string _Icon; // tag 4
		public string Icon {
			get { return _Icon; }
			set { base.has_field.set_field (4, true); _Icon = value; }
		}
		public bool HasIcon {
			get { return base.has_field.has_field (4); }
		}

		private string _Depict; // tag 5
		public string Depict {
			get { return _Depict; }
			set { base.has_field.set_field (5, true); _Depict = value; }
		}
		public bool HasDepict {
			get { return base.has_field.has_field (5); }
		}

		private string _uniqueId; // tag 6
		public string uniqueId {
			get { return _uniqueId; }
			set { base.has_field.set_field (6, true); _uniqueId = value; }
		}
		public bool HasUniqueId {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _timestamp; // tag 7
		public Int64 timestamp {
			get { return _timestamp; }
			set { base.has_field.set_field (7, true); _timestamp = value; }
		}
		public bool HasTimestamp {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _Value; // tag 8
		public Int64 Value {
			get { return _Value; }
			set { base.has_field.set_field (8, true); _Value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (8); }
		}

		public item2Info () : base(max_field_count) {}

		public item2Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.itemId = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				case 2:
					this.type = base.deserialize.read_integer ();
					break;
				case 3:
					this.Name = base.deserialize.read_string ();
					break;
				case 4:
					this.Icon = base.deserialize.read_string ();
					break;
				case 5:
					this.Depict = base.deserialize.read_string ();
					break;
				case 6:
					this.uniqueId = base.deserialize.read_string ();
					break;
				case 7:
					this.timestamp = base.deserialize.read_integer ();
					break;
				case 8:
					this.Value = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.itemId, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.type, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.Name, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.Icon, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.Depict, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.uniqueId, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.timestamp, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.Value, 8);
			}

			return base.serialize.close ();
		}
	}


	public class item3Info : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _itemId; // tag 0
		public Int64 itemId {
			get { return _itemId; }
			set { base.has_field.set_field (0, true); _itemId = value; }
		}
		public bool HasItemId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _cardType; // tag 2
		public Int64 cardType {
			get { return _cardType; }
			set { base.has_field.set_field (2, true); _cardType = value; }
		}
		public bool HasCardType {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _type; // tag 3
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (3, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (3); }
		}

		private string _itemIcon; // tag 4
		public string itemIcon {
			get { return _itemIcon; }
			set { base.has_field.set_field (4, true); _itemIcon = value; }
		}
		public bool HasItemIcon {
			get { return base.has_field.has_field (4); }
		}

		private string _uniqueId; // tag 5
		public string uniqueId {
			get { return _uniqueId; }
			set { base.has_field.set_field (5, true); _uniqueId = value; }
		}
		public bool HasUniqueId {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _Level; // tag 6
		public Int64 Level {
			get { return _Level; }
			set { base.has_field.set_field (6, true); _Level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (6); }
		}

		public item3Info () : base(max_field_count) {}

		public item3Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.itemId = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				case 2:
					this.cardType = base.deserialize.read_integer ();
					break;
				case 3:
					this.type = base.deserialize.read_integer ();
					break;
				case 4:
					this.itemIcon = base.deserialize.read_string ();
					break;
				case 5:
					this.uniqueId = base.deserialize.read_string ();
					break;
				case 6:
					this.Level = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.itemId, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.cardType, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.type, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.itemIcon, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.uniqueId, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.Level, 6);
			}

			return base.serialize.close ();
		}
	}


	public class itemInfoUnit : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _itemId; // tag 0
		public Int64 itemId {
			get { return _itemId; }
			set { base.has_field.set_field (0, true); _itemId = value; }
		}
		public bool HasItemId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _num; // tag 1
		public Int64 num {
			get { return _num; }
			set { base.has_field.set_field (1, true); _num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (1); }
		}

		private string _itemIcon; // tag 2
		public string itemIcon {
			get { return _itemIcon; }
			set { base.has_field.set_field (2, true); _itemIcon = value; }
		}
		public bool HasItemIcon {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _type; // tag 3
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (3, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (3); }
		}

		public itemInfoUnit () : base(max_field_count) {}

		public itemInfoUnit (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.itemId = base.deserialize.read_integer ();
					break;
				case 1:
					this.num = base.deserialize.read_integer ();
					break;
				case 2:
					this.itemIcon = base.deserialize.read_string ();
					break;
				case 3:
					this.type = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.itemId, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.num, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.itemIcon, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.type, 3);
			}

			return base.serialize.close ();
		}
	}


	public class login {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private string _token; // tag 1
			public string token {
				get { return _token; }
				set { base.has_field.set_field (1, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.token = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.token, 1);
				}

				return base.serialize.close ();
			}
		}


	}


	public class login_user_center {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 6;
			
			
			private string _deviceId; // tag 0
			public string deviceId {
				get { return _deviceId; }
				set { base.has_field.set_field (0, true); _deviceId = value; }
			}
			public bool HasDeviceId {
				get { return base.has_field.has_field (0); }
			}

			private Int64 _unionId; // tag 1
			public Int64 unionId {
				get { return _unionId; }
				set { base.has_field.set_field (1, true); _unionId = value; }
			}
			public bool HasUnionId {
				get { return base.has_field.has_field (1); }
			}

			private Int64 _siteId; // tag 2
			public Int64 siteId {
				get { return _siteId; }
				set { base.has_field.set_field (2, true); _siteId = value; }
			}
			public bool HasSiteId {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _terminalSource; // tag 3
			public Int64 terminalSource {
				get { return _terminalSource; }
				set { base.has_field.set_field (3, true); _terminalSource = value; }
			}
			public bool HasTerminalSource {
				get { return base.has_field.has_field (3); }
			}

			private string _version; // tag 4
			public string version {
				get { return _version; }
				set { base.has_field.set_field (4, true); _version = value; }
			}
			public bool HasVersion {
				get { return base.has_field.has_field (4); }
			}

			private string _access_token; // tag 5
			public string access_token {
				get { return _access_token; }
				set { base.has_field.set_field (5, true); _access_token = value; }
			}
			public bool HasAccess_token {
				get { return base.has_field.has_field (5); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.deviceId = base.deserialize.read_string ();
						break;
					case 1:
						this.unionId = base.deserialize.read_integer ();
						break;
					case 2:
						this.siteId = base.deserialize.read_integer ();
						break;
					case 3:
						this.terminalSource = base.deserialize.read_integer ();
						break;
					case 4:
						this.version = base.deserialize.read_string ();
						break;
					case 5:
						this.access_token = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.deviceId, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_integer (this.unionId, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_integer (this.siteId, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.terminalSource, 3);
				}

				if (base.has_field.has_field (4)) {
					base.serialize.write_string (this.version, 4);
				}

				if (base.has_field.has_field (5)) {
					base.serialize.write_string (this.access_token, 5);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private string _token; // tag 1
			public string token {
				get { return _token; }
				set { base.has_field.set_field (1, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (1); }
			}

			private string _ip; // tag 2
			public string ip {
				get { return _ip; }
				set { base.has_field.set_field (2, true); _ip = value; }
			}
			public bool HasIp {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _port; // tag 3
			public Int64 port {
				get { return _port; }
				set { base.has_field.set_field (3, true); _port = value; }
			}
			public bool HasPort {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.token = base.deserialize.read_string ();
						break;
					case 2:
						this.ip = base.deserialize.read_string ();
						break;
					case 3:
						this.port = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.token, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.ip, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.port, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class logintest {
	
		public class request : SprotoTypeBase {
			private static int max_field_count = 2;
			
			
			private string _account; // tag 0
			public string account {
				get { return _account; }
				set { base.has_field.set_field (0, true); _account = value; }
			}
			public bool HasAccount {
				get { return base.has_field.has_field (0); }
			}

			private string _password; // tag 1
			public string password {
				get { return _password; }
				set { base.has_field.set_field (1, true); _password = value; }
			}
			public bool HasPassword {
				get { return base.has_field.has_field (1); }
			}

			public request () : base(max_field_count) {}

			public request (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.account = base.deserialize.read_string ();
						break;
					case 1:
						this.password = base.deserialize.read_string ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_string (this.account, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.password, 1);
				}

				return base.serialize.close ();
			}
		}


		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private string _token; // tag 1
			public string token {
				get { return _token; }
				set { base.has_field.set_field (1, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (1); }
			}

			private string _ip; // tag 2
			public string ip {
				get { return _ip; }
				set { base.has_field.set_field (2, true); _ip = value; }
			}
			public bool HasIp {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _port; // tag 3
			public Int64 port {
				get { return _port; }
				set { base.has_field.set_field (3, true); _port = value; }
			}
			public bool HasPort {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.token = base.deserialize.read_string ();
						break;
					case 2:
						this.ip = base.deserialize.read_string ();
						break;
					case 3:
						this.port = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.token, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.ip, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.port, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class moudlePassUnit : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private List<bool> _scoreList; // tag 0
		public List<bool> scoreList {
			get { return _scoreList; }
			set { base.has_field.set_field (0, true); _scoreList = value; }
		}
		public bool HasScoreList {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _markingTotal; // tag 2
		public Int64 markingTotal {
			get { return _markingTotal; }
			set { base.has_field.set_field (1, true); _markingTotal = value; }
		}
		public bool HasMarkingTotal {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _index; // tag 3
		public Int64 index {
			get { return _index; }
			set { base.has_field.set_field (2, true); _index = value; }
		}
		public bool HasIndex {
			get { return base.has_field.has_field (2); }
		}

		public moudlePassUnit () : base(max_field_count) {}

		public moudlePassUnit (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.scoreList = base.deserialize.read_boolean_list ();
					break;
				case 2:
					this.markingTotal = base.deserialize.read_integer ();
					break;
				case 3:
					this.index = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_boolean (this.scoreList, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.markingTotal, 2);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.index, 3);
			}

			return base.serialize.close ();
		}
	}


	public class moudle_base : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _grade; // tag 0
		public Int64 grade {
			get { return _grade; }
			set { base.has_field.set_field (0, true); _grade = value; }
		}
		public bool HasGrade {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _term; // tag 1
		public Int64 term {
			get { return _term; }
			set { base.has_field.set_field (1, true); _term = value; }
		}
		public bool HasTerm {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _unit; // tag 2
		public Int64 unit {
			get { return _unit; }
			set { base.has_field.set_field (2, true); _unit = value; }
		}
		public bool HasUnit {
			get { return base.has_field.has_field (2); }
		}

		private double _moudleId; // tag 3
		public double moudleId {
			get { return _moudleId; }
			set { base.has_field.set_field (3, true); _moudleId = value; }
		}
		public bool HasMoudleId {
			get { return base.has_field.has_field (3); }
		}

		public moudle_base () : base(max_field_count) {}

		public moudle_base (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.grade = base.deserialize.read_integer ();
					break;
				case 1:
					this.term = base.deserialize.read_integer ();
					break;
				case 2:
					this.unit = base.deserialize.read_integer ();
					break;
				case 3:
					this.moudleId = base.deserialize.read_decimal (10.0);
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.grade, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.term, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.unit, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_decimal (this.moudleId, 10.0, 3);
			}

			return base.serialize.close ();
		}
	}


	public class package : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _type; // tag 0
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (0, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _session; // tag 1
		public Int64 session {
			get { return _session; }
			set { base.has_field.set_field (1, true); _session = value; }
		}
		public bool HasSession {
			get { return base.has_field.has_field (1); }
		}

		public package () : base(max_field_count) {}

		public package (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.type = base.deserialize.read_integer ();
					break;
				case 1:
					this.session = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.type, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.session, 1);
			}

			return base.serialize.close ();
		}
	}


	public class passUnit : SprotoTypeBase {
		private static int max_field_count = 3;
		
		
		private double _moudleId; // tag 0
		public double moudleId {
			get { return _moudleId; }
			set { base.has_field.set_field (0, true); _moudleId = value; }
		}
		public bool HasMoudleId {
			get { return base.has_field.has_field (0); }
		}

		private bool _isPass; // tag 1
		public bool isPass {
			get { return _isPass; }
			set { base.has_field.set_field (1, true); _isPass = value; }
		}
		public bool HasIsPass {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _star; // tag 2
		public Int64 star {
			get { return _star; }
			set { base.has_field.set_field (2, true); _star = value; }
		}
		public bool HasStar {
			get { return base.has_field.has_field (2); }
		}

		public passUnit () : base(max_field_count) {}

		public passUnit (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.moudleId = base.deserialize.read_decimal (10.0);
					break;
				case 1:
					this.isPass = base.deserialize.read_boolean ();
					break;
				case 2:
					this.star = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_decimal (this.moudleId, 10.0, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_boolean (this.isPass, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.star, 2);
			}

			return base.serialize.close ();
		}
	}


	public class role_info : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _role_id; // tag 0
		public Int64 role_id {
			get { return _role_id; }
			set { base.has_field.set_field (0, true); _role_id = value; }
		}
		public bool HasRole_id {
			get { return base.has_field.has_field (0); }
		}

		private string _nickname; // tag 1
		public string nickname {
			get { return _nickname; }
			set { base.has_field.set_field (1, true); _nickname = value; }
		}
		public bool HasNickname {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _race; // tag 2
		public Int64 race {
			get { return _race; }
			set { base.has_field.set_field (2, true); _race = value; }
		}
		public bool HasRace {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _level; // tag 3
		public Int64 level {
			get { return _level; }
			set { base.has_field.set_field (3, true); _level = value; }
		}
		public bool HasLevel {
			get { return base.has_field.has_field (3); }
		}

		public role_info () : base(max_field_count) {}

		public role_info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.role_id = base.deserialize.read_integer ();
					break;
				case 1:
					this.nickname = base.deserialize.read_string ();
					break;
				case 2:
					this.race = base.deserialize.read_integer ();
					break;
				case 3:
					this.level = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.role_id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.nickname, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.race, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.level, 3);
			}

			return base.serialize.close ();
		}
	}


	public class scoreBaseInfo : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _score; // tag 0
		public Int64 score {
			get { return _score; }
			set { base.has_field.set_field (0, true); _score = value; }
		}
		public bool HasScore {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _fluency; // tag 1
		public Int64 fluency {
			get { return _fluency; }
			set { base.has_field.set_field (1, true); _fluency = value; }
		}
		public bool HasFluency {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _nicety; // tag 2
		public Int64 nicety {
			get { return _nicety; }
			set { base.has_field.set_field (2, true); _nicety = value; }
		}
		public bool HasNicety {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _integrity; // tag 3
		public Int64 integrity {
			get { return _integrity; }
			set { base.has_field.set_field (3, true); _integrity = value; }
		}
		public bool HasIntegrity {
			get { return base.has_field.has_field (3); }
		}

		public scoreBaseInfo () : base(max_field_count) {}

		public scoreBaseInfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.score = base.deserialize.read_integer ();
					break;
				case 1:
					this.fluency = base.deserialize.read_integer ();
					break;
				case 2:
					this.nicety = base.deserialize.read_integer ();
					break;
				case 3:
					this.integrity = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.score, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.fluency, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.nicety, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.integrity, 3);
			}

			return base.serialize.close ();
		}
	}


	public class scoreUnit : SprotoTypeBase {
		private static int max_field_count = 6;
		
		
		private bool _isPass; // tag 0
		public bool isPass {
			get { return _isPass; }
			set { base.has_field.set_field (0, true); _isPass = value; }
		}
		public bool HasIsPass {
			get { return base.has_field.has_field (0); }
		}

		private scoreBaseInfo _info; // tag 1
		public scoreBaseInfo info {
			get { return _info; }
			set { base.has_field.set_field (1, true); _info = value; }
		}
		public bool HasInfo {
			get { return base.has_field.has_field (1); }
		}

		private Int64 _index; // tag 2
		public Int64 index {
			get { return _index; }
			set { base.has_field.set_field (2, true); _index = value; }
		}
		public bool HasIndex {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _markingIndex; // tag 3
		public Int64 markingIndex {
			get { return _markingIndex; }
			set { base.has_field.set_field (3, true); _markingIndex = value; }
		}
		public bool HasMarkingIndex {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _markingTotal; // tag 4
		public Int64 markingTotal {
			get { return _markingTotal; }
			set { base.has_field.set_field (4, true); _markingTotal = value; }
		}
		public bool HasMarkingTotal {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _order; // tag 5
		public Int64 order {
			get { return _order; }
			set { base.has_field.set_field (5, true); _order = value; }
		}
		public bool HasOrder {
			get { return base.has_field.has_field (5); }
		}

		public scoreUnit () : base(max_field_count) {}

		public scoreUnit (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.isPass = base.deserialize.read_boolean ();
					break;
				case 1:
					this.info = base.deserialize.read_obj<scoreBaseInfo> ();
					break;
				case 2:
					this.index = base.deserialize.read_integer ();
					break;
				case 3:
					this.markingIndex = base.deserialize.read_integer ();
					break;
				case 4:
					this.markingTotal = base.deserialize.read_integer ();
					break;
				case 5:
					this.order = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_boolean (this.isPass, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_obj (this.info, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_integer (this.index, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.markingIndex, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.markingTotal, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.order, 5);
			}

			return base.serialize.close ();
		}
	}


	public class shop1UnitInfo : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _Id; // tag 0
		public Int64 Id {
			get { return _Id; }
			set { base.has_field.set_field (0, true); _Id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _Name; // tag 1
		public string Name {
			get { return _Name; }
			set { base.has_field.set_field (1, true); _Name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (1); }
		}

		private string _Depict; // tag 2
		public string Depict {
			get { return _Depict; }
			set { base.has_field.set_field (2, true); _Depict = value; }
		}
		public bool HasDepict {
			get { return base.has_field.has_field (2); }
		}

		private string _Icon1; // tag 3
		public string Icon1 {
			get { return _Icon1; }
			set { base.has_field.set_field (3, true); _Icon1 = value; }
		}
		public bool HasIcon1 {
			get { return base.has_field.has_field (3); }
		}

		private string _Icon2; // tag 4
		public string Icon2 {
			get { return _Icon2; }
			set { base.has_field.set_field (4, true); _Icon2 = value; }
		}
		public bool HasIcon2 {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _LittleIcon; // tag 5
		public List<string> LittleIcon {
			get { return _LittleIcon; }
			set { base.has_field.set_field (5, true); _LittleIcon = value; }
		}
		public bool HasLittleIcon {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _Value; // tag 6
		public Int64 Value {
			get { return _Value; }
			set { base.has_field.set_field (6, true); _Value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (6); }
		}

		private Int64 _type; // tag 7
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (7, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (7); }
		}

		private Int64 _Num; // tag 8
		public Int64 Num {
			get { return _Num; }
			set { base.has_field.set_field (8, true); _Num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (8); }
		}

		public shop1UnitInfo () : base(max_field_count) {}

		public shop1UnitInfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.Id = base.deserialize.read_integer ();
					break;
				case 1:
					this.Name = base.deserialize.read_string ();
					break;
				case 2:
					this.Depict = base.deserialize.read_string ();
					break;
				case 3:
					this.Icon1 = base.deserialize.read_string ();
					break;
				case 4:
					this.Icon2 = base.deserialize.read_string ();
					break;
				case 5:
					this.LittleIcon = base.deserialize.read_string_list ();
					break;
				case 6:
					this.Value = base.deserialize.read_integer ();
					break;
				case 7:
					this.type = base.deserialize.read_integer ();
					break;
				case 8:
					this.Num = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.Id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.Name, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.Depict, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.Icon1, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.Icon2, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.LittleIcon, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.Value, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_integer (this.type, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_integer (this.Num, 8);
			}

			return base.serialize.close ();
		}
	}


	public class shop2UnitInfo : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private Int64 _itemId; // tag 0
		public Int64 itemId {
			get { return _itemId; }
			set { base.has_field.set_field (0, true); _itemId = value; }
		}
		public bool HasItemId {
			get { return base.has_field.has_field (0); }
		}

		private Int64 _type; // tag 1
		public Int64 type {
			get { return _type; }
			set { base.has_field.set_field (1, true); _type = value; }
		}
		public bool HasType {
			get { return base.has_field.has_field (1); }
		}

		private string _Icon; // tag 2
		public string Icon {
			get { return _Icon; }
			set { base.has_field.set_field (2, true); _Icon = value; }
		}
		public bool HasIcon {
			get { return base.has_field.has_field (2); }
		}

		private string _Depict; // tag 3
		public string Depict {
			get { return _Depict; }
			set { base.has_field.set_field (3, true); _Depict = value; }
		}
		public bool HasDepict {
			get { return base.has_field.has_field (3); }
		}

		private Int64 _Value; // tag 4
		public Int64 Value {
			get { return _Value; }
			set { base.has_field.set_field (4, true); _Value = value; }
		}
		public bool HasValue {
			get { return base.has_field.has_field (4); }
		}

		private Int64 _Num; // tag 5
		public Int64 Num {
			get { return _Num; }
			set { base.has_field.set_field (5, true); _Num = value; }
		}
		public bool HasNum {
			get { return base.has_field.has_field (5); }
		}

		private string _Name; // tag 6
		public string Name {
			get { return _Name; }
			set { base.has_field.set_field (6, true); _Name = value; }
		}
		public bool HasName {
			get { return base.has_field.has_field (6); }
		}

		public shop2UnitInfo () : base(max_field_count) {}

		public shop2UnitInfo (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.itemId = base.deserialize.read_integer ();
					break;
				case 1:
					this.type = base.deserialize.read_integer ();
					break;
				case 2:
					this.Icon = base.deserialize.read_string ();
					break;
				case 3:
					this.Depict = base.deserialize.read_string ();
					break;
				case 4:
					this.Value = base.deserialize.read_integer ();
					break;
				case 5:
					this.Num = base.deserialize.read_integer ();
					break;
				case 6:
					this.Name = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.itemId, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_integer (this.type, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.Icon, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.Depict, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_integer (this.Value, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_integer (this.Num, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.Name, 6);
			}

			return base.serialize.close ();
		}
	}


	public class table10Info : SprotoTypeBase {
		private static int max_field_count = 7;
		
		
		private string _word; // tag 0
		public string word {
			get { return _word; }
			set { base.has_field.set_field (0, true); _word = value; }
		}
		public bool HasWord {
			get { return base.has_field.has_field (0); }
		}

		private string _cword; // tag 1
		public string cword {
			get { return _cword; }
			set { base.has_field.set_field (1, true); _cword = value; }
		}
		public bool HasCword {
			get { return base.has_field.has_field (1); }
		}

		private string _icon1; // tag 2
		public string icon1 {
			get { return _icon1; }
			set { base.has_field.set_field (2, true); _icon1 = value; }
		}
		public bool HasIcon1 {
			get { return base.has_field.has_field (2); }
		}

		private string _icon2; // tag 3
		public string icon2 {
			get { return _icon2; }
			set { base.has_field.set_field (3, true); _icon2 = value; }
		}
		public bool HasIcon2 {
			get { return base.has_field.has_field (3); }
		}

		private string _voice; // tag 4
		public string voice {
			get { return _voice; }
			set { base.has_field.set_field (4, true); _voice = value; }
		}
		public bool HasVoice {
			get { return base.has_field.has_field (4); }
		}

		private string _sendWord; // tag 5
		public string sendWord {
			get { return _sendWord; }
			set { base.has_field.set_field (5, true); _sendWord = value; }
		}
		public bool HasSendWord {
			get { return base.has_field.has_field (5); }
		}

		private string _customSoundmark; // tag 6
		public string customSoundmark {
			get { return _customSoundmark; }
			set { base.has_field.set_field (6, true); _customSoundmark = value; }
		}
		public bool HasCustomSoundmark {
			get { return base.has_field.has_field (6); }
		}

		public table10Info () : base(max_field_count) {}

		public table10Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.word = base.deserialize.read_string ();
					break;
				case 1:
					this.cword = base.deserialize.read_string ();
					break;
				case 2:
					this.icon1 = base.deserialize.read_string ();
					break;
				case 3:
					this.icon2 = base.deserialize.read_string ();
					break;
				case 4:
					this.voice = base.deserialize.read_string ();
					break;
				case 5:
					this.sendWord = base.deserialize.read_string ();
					break;
				case 6:
					this.customSoundmark = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.word, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.cword, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.icon1, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.icon2, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.voice, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.sendWord, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.customSoundmark, 6);
			}

			return base.serialize.close ();
		}
	}


	public class table11Info : SprotoTypeBase {
		private static int max_field_count = 21;
		
		
		private List<string> _option; // tag 0
		public List<string> option {
			get { return _option; }
			set { base.has_field.set_field (0, true); _option = value; }
		}
		public bool HasOption {
			get { return base.has_field.has_field (0); }
		}

		private string _right; // tag 1
		public string right {
			get { return _right; }
			set { base.has_field.set_field (1, true); _right = value; }
		}
		public bool HasRight {
			get { return base.has_field.has_field (1); }
		}

		private string _tips; // tag 2
		public string tips {
			get { return _tips; }
			set { base.has_field.set_field (2, true); _tips = value; }
		}
		public bool HasTips {
			get { return base.has_field.has_field (2); }
		}

		private List<string> _clues1; // tag 3
		public List<string> clues1 {
			get { return _clues1; }
			set { base.has_field.set_field (3, true); _clues1 = value; }
		}
		public bool HasClues1 {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _cluesVoice1; // tag 4
		public List<string> cluesVoice1 {
			get { return _cluesVoice1; }
			set { base.has_field.set_field (4, true); _cluesVoice1 = value; }
		}
		public bool HasCluesVoice1 {
			get { return base.has_field.has_field (4); }
		}

		private string _rightText1; // tag 5
		public string rightText1 {
			get { return _rightText1; }
			set { base.has_field.set_field (5, true); _rightText1 = value; }
		}
		public bool HasRightText1 {
			get { return base.has_field.has_field (5); }
		}

		private string _rightVoice1; // tag 6
		public string rightVoice1 {
			get { return _rightVoice1; }
			set { base.has_field.set_field (6, true); _rightVoice1 = value; }
		}
		public bool HasRightVoice1 {
			get { return base.has_field.has_field (6); }
		}

		private string _rightIcon1; // tag 7
		public string rightIcon1 {
			get { return _rightIcon1; }
			set { base.has_field.set_field (7, true); _rightIcon1 = value; }
		}
		public bool HasRightIcon1 {
			get { return base.has_field.has_field (7); }
		}

		private List<string> _clues2; // tag 8
		public List<string> clues2 {
			get { return _clues2; }
			set { base.has_field.set_field (8, true); _clues2 = value; }
		}
		public bool HasClues2 {
			get { return base.has_field.has_field (8); }
		}

		private List<string> _cluesVoice2; // tag 9
		public List<string> cluesVoice2 {
			get { return _cluesVoice2; }
			set { base.has_field.set_field (9, true); _cluesVoice2 = value; }
		}
		public bool HasCluesVoice2 {
			get { return base.has_field.has_field (9); }
		}

		private string _rightText2; // tag 10
		public string rightText2 {
			get { return _rightText2; }
			set { base.has_field.set_field (10, true); _rightText2 = value; }
		}
		public bool HasRightText2 {
			get { return base.has_field.has_field (10); }
		}

		private string _rightVoice2; // tag 11
		public string rightVoice2 {
			get { return _rightVoice2; }
			set { base.has_field.set_field (11, true); _rightVoice2 = value; }
		}
		public bool HasRightVoice2 {
			get { return base.has_field.has_field (11); }
		}

		private string _rightIcon2; // tag 12
		public string rightIcon2 {
			get { return _rightIcon2; }
			set { base.has_field.set_field (12, true); _rightIcon2 = value; }
		}
		public bool HasRightIcon2 {
			get { return base.has_field.has_field (12); }
		}

		private List<string> _clues3; // tag 13
		public List<string> clues3 {
			get { return _clues3; }
			set { base.has_field.set_field (13, true); _clues3 = value; }
		}
		public bool HasClues3 {
			get { return base.has_field.has_field (13); }
		}

		private List<string> _cluesVoice3; // tag 14
		public List<string> cluesVoice3 {
			get { return _cluesVoice3; }
			set { base.has_field.set_field (14, true); _cluesVoice3 = value; }
		}
		public bool HasCluesVoice3 {
			get { return base.has_field.has_field (14); }
		}

		private string _rightText3; // tag 15
		public string rightText3 {
			get { return _rightText3; }
			set { base.has_field.set_field (15, true); _rightText3 = value; }
		}
		public bool HasRightText3 {
			get { return base.has_field.has_field (15); }
		}

		private string _rightVoice3; // tag 16
		public string rightVoice3 {
			get { return _rightVoice3; }
			set { base.has_field.set_field (16, true); _rightVoice3 = value; }
		}
		public bool HasRightVoice3 {
			get { return base.has_field.has_field (16); }
		}

		private string _rightIcon3; // tag 17
		public string rightIcon3 {
			get { return _rightIcon3; }
			set { base.has_field.set_field (17, true); _rightIcon3 = value; }
		}
		public bool HasRightIcon3 {
			get { return base.has_field.has_field (17); }
		}

		private string _rightText1Co; // tag 18
		public string rightText1Co {
			get { return _rightText1Co; }
			set { base.has_field.set_field (18, true); _rightText1Co = value; }
		}
		public bool HasRightText1Co {
			get { return base.has_field.has_field (18); }
		}

		private string _rightText2Co; // tag 19
		public string rightText2Co {
			get { return _rightText2Co; }
			set { base.has_field.set_field (19, true); _rightText2Co = value; }
		}
		public bool HasRightText2Co {
			get { return base.has_field.has_field (19); }
		}

		private string _rightText3Co; // tag 20
		public string rightText3Co {
			get { return _rightText3Co; }
			set { base.has_field.set_field (20, true); _rightText3Co = value; }
		}
		public bool HasRightText3Co {
			get { return base.has_field.has_field (20); }
		}

		public table11Info () : base(max_field_count) {}

		public table11Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.option = base.deserialize.read_string_list ();
					break;
				case 1:
					this.right = base.deserialize.read_string ();
					break;
				case 2:
					this.tips = base.deserialize.read_string ();
					break;
				case 3:
					this.clues1 = base.deserialize.read_string_list ();
					break;
				case 4:
					this.cluesVoice1 = base.deserialize.read_string_list ();
					break;
				case 5:
					this.rightText1 = base.deserialize.read_string ();
					break;
				case 6:
					this.rightVoice1 = base.deserialize.read_string ();
					break;
				case 7:
					this.rightIcon1 = base.deserialize.read_string ();
					break;
				case 8:
					this.clues2 = base.deserialize.read_string_list ();
					break;
				case 9:
					this.cluesVoice2 = base.deserialize.read_string_list ();
					break;
				case 10:
					this.rightText2 = base.deserialize.read_string ();
					break;
				case 11:
					this.rightVoice2 = base.deserialize.read_string ();
					break;
				case 12:
					this.rightIcon2 = base.deserialize.read_string ();
					break;
				case 13:
					this.clues3 = base.deserialize.read_string_list ();
					break;
				case 14:
					this.cluesVoice3 = base.deserialize.read_string_list ();
					break;
				case 15:
					this.rightText3 = base.deserialize.read_string ();
					break;
				case 16:
					this.rightVoice3 = base.deserialize.read_string ();
					break;
				case 17:
					this.rightIcon3 = base.deserialize.read_string ();
					break;
				case 18:
					this.rightText1Co = base.deserialize.read_string ();
					break;
				case 19:
					this.rightText2Co = base.deserialize.read_string ();
					break;
				case 20:
					this.rightText3Co = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.option, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.right, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.tips, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.clues1, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.cluesVoice1, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.rightText1, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.rightVoice1, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.rightIcon1, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.clues2, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_string (this.cluesVoice2, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_string (this.rightText2, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_string (this.rightVoice2, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_string (this.rightIcon2, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_string (this.clues3, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_string (this.cluesVoice3, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_string (this.rightText3, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_string (this.rightVoice3, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_string (this.rightIcon3, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_string (this.rightText1Co, 18);
			}

			if (base.has_field.has_field (19)) {
				base.serialize.write_string (this.rightText2Co, 19);
			}

			if (base.has_field.has_field (20)) {
				base.serialize.write_string (this.rightText3Co, 20);
			}

			return base.serialize.close ();
		}
	}


	public class table12Info : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private string _headId; // tag 0
		public string headId {
			get { return _headId; }
			set { base.has_field.set_field (0, true); _headId = value; }
		}
		public bool HasHeadId {
			get { return base.has_field.has_field (0); }
		}

		private string _text; // tag 1
		public string text {
			get { return _text; }
			set { base.has_field.set_field (1, true); _text = value; }
		}
		public bool HasText {
			get { return base.has_field.has_field (1); }
		}

		private string _voice; // tag 2
		public string voice {
			get { return _voice; }
			set { base.has_field.set_field (2, true); _voice = value; }
		}
		public bool HasVoice {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _deleUserId; // tag 3
		public Int64 deleUserId {
			get { return _deleUserId; }
			set { base.has_field.set_field (3, true); _deleUserId = value; }
		}
		public bool HasDeleUserId {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _confuse; // tag 4
		public List<string> confuse {
			get { return _confuse; }
			set { base.has_field.set_field (4, true); _confuse = value; }
		}
		public bool HasConfuse {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _confuseVoice; // tag 5
		public List<string> confuseVoice {
			get { return _confuseVoice; }
			set { base.has_field.set_field (5, true); _confuseVoice = value; }
		}
		public bool HasConfuseVoice {
			get { return base.has_field.has_field (5); }
		}

		private Int64 _id; // tag 6
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (6, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (6); }
		}

		private string _backgroundIcon; // tag 7
		public string backgroundIcon {
			get { return _backgroundIcon; }
			set { base.has_field.set_field (7, true); _backgroundIcon = value; }
		}
		public bool HasBackgroundIcon {
			get { return base.has_field.has_field (7); }
		}

		private List<string> _ItemIcon; // tag 8
		public List<string> ItemIcon {
			get { return _ItemIcon; }
			set { base.has_field.set_field (8, true); _ItemIcon = value; }
		}
		public bool HasItemIcon {
			get { return base.has_field.has_field (8); }
		}

		public table12Info () : base(max_field_count) {}

		public table12Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.headId = base.deserialize.read_string ();
					break;
				case 1:
					this.text = base.deserialize.read_string ();
					break;
				case 2:
					this.voice = base.deserialize.read_string ();
					break;
				case 3:
					this.deleUserId = base.deserialize.read_integer ();
					break;
				case 4:
					this.confuse = base.deserialize.read_string_list ();
					break;
				case 5:
					this.confuseVoice = base.deserialize.read_string_list ();
					break;
				case 6:
					this.id = base.deserialize.read_integer ();
					break;
				case 7:
					this.backgroundIcon = base.deserialize.read_string ();
					break;
				case 8:
					this.ItemIcon = base.deserialize.read_string_list ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.headId, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.text, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.voice, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.deleUserId, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.confuse, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.confuseVoice, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.id, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.backgroundIcon, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.ItemIcon, 8);
			}

			return base.serialize.close ();
		}
	}


	public class table13Info : SprotoTypeBase {
		private static int max_field_count = 4;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private string _text; // tag 1
		public string text {
			get { return _text; }
			set { base.has_field.set_field (1, true); _text = value; }
		}
		public bool HasText {
			get { return base.has_field.has_field (1); }
		}

		private List<string> _chaosText; // tag 2
		public List<string> chaosText {
			get { return _chaosText; }
			set { base.has_field.set_field (2, true); _chaosText = value; }
		}
		public bool HasChaosText {
			get { return base.has_field.has_field (2); }
		}

		private string _tips; // tag 3
		public string tips {
			get { return _tips; }
			set { base.has_field.set_field (3, true); _tips = value; }
		}
		public bool HasTips {
			get { return base.has_field.has_field (3); }
		}

		public table13Info () : base(max_field_count) {}

		public table13Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.text = base.deserialize.read_string ();
					break;
				case 2:
					this.chaosText = base.deserialize.read_string_list ();
					break;
				case 3:
					this.tips = base.deserialize.read_string ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.text, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.chaosText, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.tips, 3);
			}

			return base.serialize.close ();
		}
	}


	public class table14Info : SprotoTypeBase {
		private static int max_field_count = 5;
		
		
		private string _image; // tag 0
		public string image {
			get { return _image; }
			set { base.has_field.set_field (0, true); _image = value; }
		}
		public bool HasImage {
			get { return base.has_field.has_field (0); }
		}

		private string _content; // tag 1
		public string content {
			get { return _content; }
			set { base.has_field.set_field (1, true); _content = value; }
		}
		public bool HasContent {
			get { return base.has_field.has_field (1); }
		}

		private string _voice; // tag 3
		public string voice {
			get { return _voice; }
			set { base.has_field.set_field (2, true); _voice = value; }
		}
		public bool HasVoice {
			get { return base.has_field.has_field (2); }
		}

		private Int64 _isRead; // tag 4
		public Int64 isRead {
			get { return _isRead; }
			set { base.has_field.set_field (3, true); _isRead = value; }
		}
		public bool HasIsRead {
			get { return base.has_field.has_field (3); }
		}

		public table14Info () : base(max_field_count) {}

		public table14Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.image = base.deserialize.read_string ();
					break;
				case 1:
					this.content = base.deserialize.read_string ();
					break;
				case 3:
					this.voice = base.deserialize.read_string ();
					break;
				case 4:
					this.isRead = base.deserialize.read_integer ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_string (this.image, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.content, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.voice, 3);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_integer (this.isRead, 4);
			}

			return base.serialize.close ();
		}
	}


	public class table4Info : SprotoTypeBase {
		private static int max_field_count = 8;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private List<string> _cStatements; // tag 1
		public List<string> cStatements {
			get { return _cStatements; }
			set { base.has_field.set_field (1, true); _cStatements = value; }
		}
		public bool HasCStatements {
			get { return base.has_field.has_field (1); }
		}

		private List<string> _statements; // tag 2
		public List<string> statements {
			get { return _statements; }
			set { base.has_field.set_field (2, true); _statements = value; }
		}
		public bool HasStatements {
			get { return base.has_field.has_field (2); }
		}

		private string _headline; // tag 3
		public string headline {
			get { return _headline; }
			set { base.has_field.set_field (3, true); _headline = value; }
		}
		public bool HasHeadline {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _headlinesMp3; // tag 4
		public List<string> headlinesMp3 {
			get { return _headlinesMp3; }
			set { base.has_field.set_field (4, true); _headlinesMp3 = value; }
		}
		public bool HasHeadlinesMp3 {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _sVoice; // tag 5
		public List<string> sVoice {
			get { return _sVoice; }
			set { base.has_field.set_field (5, true); _sVoice = value; }
		}
		public bool HasSVoice {
			get { return base.has_field.has_field (5); }
		}

		private List<Int64> _headIds; // tag 6
		public List<Int64> headIds {
			get { return _headIds; }
			set { base.has_field.set_field (6, true); _headIds = value; }
		}
		public bool HasHeadIds {
			get { return base.has_field.has_field (6); }
		}

		private List<table12Info> _contentInfo; // tag 7
		public List<table12Info> contentInfo {
			get { return _contentInfo; }
			set { base.has_field.set_field (7, true); _contentInfo = value; }
		}
		public bool HasContentInfo {
			get { return base.has_field.has_field (7); }
		}

		public table4Info () : base(max_field_count) {}

		public table4Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.cStatements = base.deserialize.read_string_list ();
					break;
				case 2:
					this.statements = base.deserialize.read_string_list ();
					break;
				case 3:
					this.headline = base.deserialize.read_string ();
					break;
				case 4:
					this.headlinesMp3 = base.deserialize.read_string_list ();
					break;
				case 5:
					this.sVoice = base.deserialize.read_string_list ();
					break;
				case 6:
					this.headIds = base.deserialize.read_integer_list ();
					break;
				case 7:
					this.contentInfo = base.deserialize.read_obj_list<table12Info> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.cStatements, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.statements, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.headline, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.headlinesMp3, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.sVoice, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_integer (this.headIds, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_obj (this.contentInfo, 7);
			}

			return base.serialize.close ();
		}
	}


	public class table5Info : SprotoTypeBase {
		private static int max_field_count = 9;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private List<string> _cStatements; // tag 1
		public List<string> cStatements {
			get { return _cStatements; }
			set { base.has_field.set_field (1, true); _cStatements = value; }
		}
		public bool HasCStatements {
			get { return base.has_field.has_field (1); }
		}

		private List<string> _statements; // tag 2
		public List<string> statements {
			get { return _statements; }
			set { base.has_field.set_field (2, true); _statements = value; }
		}
		public bool HasStatements {
			get { return base.has_field.has_field (2); }
		}

		private List<string> _sVoice; // tag 3
		public List<string> sVoice {
			get { return _sVoice; }
			set { base.has_field.set_field (3, true); _sVoice = value; }
		}
		public bool HasSVoice {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _wordUnpack; // tag 4
		public List<string> wordUnpack {
			get { return _wordUnpack; }
			set { base.has_field.set_field (4, true); _wordUnpack = value; }
		}
		public bool HasWordUnpack {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _soundmark; // tag 5
		public List<string> soundmark {
			get { return _soundmark; }
			set { base.has_field.set_field (5, true); _soundmark = value; }
		}
		public bool HasSoundmark {
			get { return base.has_field.has_field (5); }
		}

		private List<string> _unpackVoice; // tag 6
		public List<string> unpackVoice {
			get { return _unpackVoice; }
			set { base.has_field.set_field (6, true); _unpackVoice = value; }
		}
		public bool HasUnpackVoice {
			get { return base.has_field.has_field (6); }
		}

		private string _completeVoice; // tag 7
		public string completeVoice {
			get { return _completeVoice; }
			set { base.has_field.set_field (7, true); _completeVoice = value; }
		}
		public bool HasCompleteVoice {
			get { return base.has_field.has_field (7); }
		}

		private table10Info _constantInfo; // tag 8
		public table10Info constantInfo {
			get { return _constantInfo; }
			set { base.has_field.set_field (8, true); _constantInfo = value; }
		}
		public bool HasConstantInfo {
			get { return base.has_field.has_field (8); }
		}

		public table5Info () : base(max_field_count) {}

		public table5Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.cStatements = base.deserialize.read_string_list ();
					break;
				case 2:
					this.statements = base.deserialize.read_string_list ();
					break;
				case 3:
					this.sVoice = base.deserialize.read_string_list ();
					break;
				case 4:
					this.wordUnpack = base.deserialize.read_string_list ();
					break;
				case 5:
					this.soundmark = base.deserialize.read_string_list ();
					break;
				case 6:
					this.unpackVoice = base.deserialize.read_string_list ();
					break;
				case 7:
					this.completeVoice = base.deserialize.read_string ();
					break;
				case 8:
					this.constantInfo = base.deserialize.read_obj<table10Info> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.cStatements, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.statements, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.sVoice, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.wordUnpack, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.soundmark, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.unpackVoice, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.completeVoice, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_obj (this.constantInfo, 8);
			}

			return base.serialize.close ();
		}
	}


	public class table6Info : SprotoTypeBase {
		private static int max_field_count = 22;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private List<string> _cStatements; // tag 1
		public List<string> cStatements {
			get { return _cStatements; }
			set { base.has_field.set_field (1, true); _cStatements = value; }
		}
		public bool HasCStatements {
			get { return base.has_field.has_field (1); }
		}

		private List<string> _scene2st; // tag 2
		public List<string> scene2st {
			get { return _scene2st; }
			set { base.has_field.set_field (2, true); _scene2st = value; }
		}
		public bool HasScene2st {
			get { return base.has_field.has_field (2); }
		}

		private string _scene1; // tag 3
		public string scene1 {
			get { return _scene1; }
			set { base.has_field.set_field (3, true); _scene1 = value; }
		}
		public bool HasScene1 {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _scene2sb; // tag 4
		public List<string> scene2sb {
			get { return _scene2sb; }
			set { base.has_field.set_field (4, true); _scene2sb = value; }
		}
		public bool HasScene2sb {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _cluesVoice1; // tag 5
		public List<string> cluesVoice1 {
			get { return _cluesVoice1; }
			set { base.has_field.set_field (5, true); _cluesVoice1 = value; }
		}
		public bool HasCluesVoice1 {
			get { return base.has_field.has_field (5); }
		}

		private List<string> _scene1sb; // tag 6
		public List<string> scene1sb {
			get { return _scene1sb; }
			set { base.has_field.set_field (6, true); _scene1sb = value; }
		}
		public bool HasScene1sb {
			get { return base.has_field.has_field (6); }
		}

		private List<string> _clues2; // tag 7
		public List<string> clues2 {
			get { return _clues2; }
			set { base.has_field.set_field (7, true); _clues2 = value; }
		}
		public bool HasClues2 {
			get { return base.has_field.has_field (7); }
		}

		private List<string> _scene1text; // tag 8
		public List<string> scene1text {
			get { return _scene1text; }
			set { base.has_field.set_field (8, true); _scene1text = value; }
		}
		public bool HasScene1text {
			get { return base.has_field.has_field (8); }
		}

		private List<string> _statements; // tag 9
		public List<string> statements {
			get { return _statements; }
			set { base.has_field.set_field (9, true); _statements = value; }
		}
		public bool HasStatements {
			get { return base.has_field.has_field (9); }
		}

		private string _scene2; // tag 10
		public string scene2 {
			get { return _scene2; }
			set { base.has_field.set_field (10, true); _scene2 = value; }
		}
		public bool HasScene2 {
			get { return base.has_field.has_field (10); }
		}

		private List<string> _cluesVoice2; // tag 11
		public List<string> cluesVoice2 {
			get { return _cluesVoice2; }
			set { base.has_field.set_field (11, true); _cluesVoice2 = value; }
		}
		public bool HasCluesVoice2 {
			get { return base.has_field.has_field (11); }
		}

		private List<string> _scene1voice; // tag 12
		public List<string> scene1voice {
			get { return _scene1voice; }
			set { base.has_field.set_field (12, true); _scene1voice = value; }
		}
		public bool HasScene1voice {
			get { return base.has_field.has_field (12); }
		}

		private string _title; // tag 13
		public string title {
			get { return _title; }
			set { base.has_field.set_field (13, true); _title = value; }
		}
		public bool HasTitle {
			get { return base.has_field.has_field (13); }
		}

		private List<string> _clues1; // tag 14
		public List<string> clues1 {
			get { return _clues1; }
			set { base.has_field.set_field (14, true); _clues1 = value; }
		}
		public bool HasClues1 {
			get { return base.has_field.has_field (14); }
		}

		private List<string> _sVoice; // tag 15
		public List<string> sVoice {
			get { return _sVoice; }
			set { base.has_field.set_field (15, true); _sVoice = value; }
		}
		public bool HasSVoice {
			get { return base.has_field.has_field (15); }
		}

		private List<string> _scene1st; // tag 16
		public List<string> scene1st {
			get { return _scene1st; }
			set { base.has_field.set_field (16, true); _scene1st = value; }
		}
		public bool HasScene1st {
			get { return base.has_field.has_field (16); }
		}

		private List<string> _scene2voice; // tag 17
		public List<string> scene2voice {
			get { return _scene2voice; }
			set { base.has_field.set_field (17, true); _scene2voice = value; }
		}
		public bool HasScene2voice {
			get { return base.has_field.has_field (17); }
		}

		private List<string> _scene2text; // tag 18
		public List<string> scene2text {
			get { return _scene2text; }
			set { base.has_field.set_field (18, true); _scene2text = value; }
		}
		public bool HasScene2text {
			get { return base.has_field.has_field (18); }
		}

		private Int64 _LearnTextIndex; // tag 19
		public Int64 LearnTextIndex {
			get { return _LearnTextIndex; }
			set { base.has_field.set_field (19, true); _LearnTextIndex = value; }
		}
		public bool HasLearnTextIndex {
			get { return base.has_field.has_field (19); }
		}

		private List<string> _scene1textCo; // tag 20
		public List<string> scene1textCo {
			get { return _scene1textCo; }
			set { base.has_field.set_field (20, true); _scene1textCo = value; }
		}
		public bool HasScene1textCo {
			get { return base.has_field.has_field (20); }
		}

		private List<string> _scene2textCo; // tag 21
		public List<string> scene2textCo {
			get { return _scene2textCo; }
			set { base.has_field.set_field (21, true); _scene2textCo = value; }
		}
		public bool HasScene2textCo {
			get { return base.has_field.has_field (21); }
		}

		public table6Info () : base(max_field_count) {}

		public table6Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.cStatements = base.deserialize.read_string_list ();
					break;
				case 2:
					this.scene2st = base.deserialize.read_string_list ();
					break;
				case 3:
					this.scene1 = base.deserialize.read_string ();
					break;
				case 4:
					this.scene2sb = base.deserialize.read_string_list ();
					break;
				case 5:
					this.cluesVoice1 = base.deserialize.read_string_list ();
					break;
				case 6:
					this.scene1sb = base.deserialize.read_string_list ();
					break;
				case 7:
					this.clues2 = base.deserialize.read_string_list ();
					break;
				case 8:
					this.scene1text = base.deserialize.read_string_list ();
					break;
				case 9:
					this.statements = base.deserialize.read_string_list ();
					break;
				case 10:
					this.scene2 = base.deserialize.read_string ();
					break;
				case 11:
					this.cluesVoice2 = base.deserialize.read_string_list ();
					break;
				case 12:
					this.scene1voice = base.deserialize.read_string_list ();
					break;
				case 13:
					this.title = base.deserialize.read_string ();
					break;
				case 14:
					this.clues1 = base.deserialize.read_string_list ();
					break;
				case 15:
					this.sVoice = base.deserialize.read_string_list ();
					break;
				case 16:
					this.scene1st = base.deserialize.read_string_list ();
					break;
				case 17:
					this.scene2voice = base.deserialize.read_string_list ();
					break;
				case 18:
					this.scene2text = base.deserialize.read_string_list ();
					break;
				case 19:
					this.LearnTextIndex = base.deserialize.read_integer ();
					break;
				case 20:
					this.scene1textCo = base.deserialize.read_string_list ();
					break;
				case 21:
					this.scene2textCo = base.deserialize.read_string_list ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.cStatements, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.scene2st, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.scene1, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.scene2sb, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.cluesVoice1, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.scene1sb, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_string (this.clues2, 7);
			}

			if (base.has_field.has_field (8)) {
				base.serialize.write_string (this.scene1text, 8);
			}

			if (base.has_field.has_field (9)) {
				base.serialize.write_string (this.statements, 9);
			}

			if (base.has_field.has_field (10)) {
				base.serialize.write_string (this.scene2, 10);
			}

			if (base.has_field.has_field (11)) {
				base.serialize.write_string (this.cluesVoice2, 11);
			}

			if (base.has_field.has_field (12)) {
				base.serialize.write_string (this.scene1voice, 12);
			}

			if (base.has_field.has_field (13)) {
				base.serialize.write_string (this.title, 13);
			}

			if (base.has_field.has_field (14)) {
				base.serialize.write_string (this.clues1, 14);
			}

			if (base.has_field.has_field (15)) {
				base.serialize.write_string (this.sVoice, 15);
			}

			if (base.has_field.has_field (16)) {
				base.serialize.write_string (this.scene1st, 16);
			}

			if (base.has_field.has_field (17)) {
				base.serialize.write_string (this.scene2voice, 17);
			}

			if (base.has_field.has_field (18)) {
				base.serialize.write_string (this.scene2text, 18);
			}

			if (base.has_field.has_field (19)) {
				base.serialize.write_integer (this.LearnTextIndex, 19);
			}

			if (base.has_field.has_field (20)) {
				base.serialize.write_string (this.scene1textCo, 20);
			}

			if (base.has_field.has_field (21)) {
				base.serialize.write_string (this.scene2textCo, 21);
			}

			return base.serialize.close ();
		}
	}


	public class table7Info : SprotoTypeBase {
		private static int max_field_count = 8;
		
		
		private Int64 _id; // tag 0
		public Int64 id {
			get { return _id; }
			set { base.has_field.set_field (0, true); _id = value; }
		}
		public bool HasId {
			get { return base.has_field.has_field (0); }
		}

		private List<string> _cStatements; // tag 1
		public List<string> cStatements {
			get { return _cStatements; }
			set { base.has_field.set_field (1, true); _cStatements = value; }
		}
		public bool HasCStatements {
			get { return base.has_field.has_field (1); }
		}

		private List<string> _statements; // tag 2
		public List<string> statements {
			get { return _statements; }
			set { base.has_field.set_field (2, true); _statements = value; }
		}
		public bool HasStatements {
			get { return base.has_field.has_field (2); }
		}

		private List<string> _expandIcon; // tag 3
		public List<string> expandIcon {
			get { return _expandIcon; }
			set { base.has_field.set_field (3, true); _expandIcon = value; }
		}
		public bool HasExpandIcon {
			get { return base.has_field.has_field (3); }
		}

		private List<string> _voice; // tag 4
		public List<string> voice {
			get { return _voice; }
			set { base.has_field.set_field (4, true); _voice = value; }
		}
		public bool HasVoice {
			get { return base.has_field.has_field (4); }
		}

		private List<string> _expandVoice; // tag 5
		public List<string> expandVoice {
			get { return _expandVoice; }
			set { base.has_field.set_field (5, true); _expandVoice = value; }
		}
		public bool HasExpandVoice {
			get { return base.has_field.has_field (5); }
		}

		private List<string> _expandWord; // tag 6
		public List<string> expandWord {
			get { return _expandWord; }
			set { base.has_field.set_field (6, true); _expandWord = value; }
		}
		public bool HasExpandWord {
			get { return base.has_field.has_field (6); }
		}

		private table10Info _constantInfo; // tag 7
		public table10Info constantInfo {
			get { return _constantInfo; }
			set { base.has_field.set_field (7, true); _constantInfo = value; }
		}
		public bool HasConstantInfo {
			get { return base.has_field.has_field (7); }
		}

		public table7Info () : base(max_field_count) {}

		public table7Info (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.id = base.deserialize.read_integer ();
					break;
				case 1:
					this.cStatements = base.deserialize.read_string_list ();
					break;
				case 2:
					this.statements = base.deserialize.read_string_list ();
					break;
				case 3:
					this.expandIcon = base.deserialize.read_string_list ();
					break;
				case 4:
					this.voice = base.deserialize.read_string_list ();
					break;
				case 5:
					this.expandVoice = base.deserialize.read_string_list ();
					break;
				case 6:
					this.expandWord = base.deserialize.read_string_list ();
					break;
				case 7:
					this.constantInfo = base.deserialize.read_obj<table10Info> ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.id, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_string (this.cStatements, 1);
			}

			if (base.has_field.has_field (2)) {
				base.serialize.write_string (this.statements, 2);
			}

			if (base.has_field.has_field (3)) {
				base.serialize.write_string (this.expandIcon, 3);
			}

			if (base.has_field.has_field (4)) {
				base.serialize.write_string (this.voice, 4);
			}

			if (base.has_field.has_field (5)) {
				base.serialize.write_string (this.expandVoice, 5);
			}

			if (base.has_field.has_field (6)) {
				base.serialize.write_string (this.expandWord, 6);
			}

			if (base.has_field.has_field (7)) {
				base.serialize.write_obj (this.constantInfo, 7);
			}

			return base.serialize.close ();
		}
	}


	public class travelerLogin {
	
		public class response : SprotoTypeBase {
			private static int max_field_count = 4;
			
			
			private Int64 _session; // tag 0
			public Int64 session {
				get { return _session; }
				set { base.has_field.set_field (0, true); _session = value; }
			}
			public bool HasSession {
				get { return base.has_field.has_field (0); }
			}

			private string _token; // tag 1
			public string token {
				get { return _token; }
				set { base.has_field.set_field (1, true); _token = value; }
			}
			public bool HasToken {
				get { return base.has_field.has_field (1); }
			}

			private string _ip; // tag 2
			public string ip {
				get { return _ip; }
				set { base.has_field.set_field (2, true); _ip = value; }
			}
			public bool HasIp {
				get { return base.has_field.has_field (2); }
			}

			private Int64 _port; // tag 3
			public Int64 port {
				get { return _port; }
				set { base.has_field.set_field (3, true); _port = value; }
			}
			public bool HasPort {
				get { return base.has_field.has_field (3); }
			}

			public response () : base(max_field_count) {}

			public response (byte[] buffer) : base(max_field_count, buffer) {
				this.decode ();
			}

			protected override void decode () {
				int tag = -1;
				while (-1 != (tag = base.deserialize.read_tag ())) {
					switch (tag) {
					case 0:
						this.session = base.deserialize.read_integer ();
						break;
					case 1:
						this.token = base.deserialize.read_string ();
						break;
					case 2:
						this.ip = base.deserialize.read_string ();
						break;
					case 3:
						this.port = base.deserialize.read_integer ();
						break;
					default:
						base.deserialize.read_unknow_data ();
						break;
					}
				}
			}

			public override int encode (SprotoStream stream) {
				base.serialize.open (stream);

				if (base.has_field.has_field (0)) {
					base.serialize.write_integer (this.session, 0);
				}

				if (base.has_field.has_field (1)) {
					base.serialize.write_string (this.token, 1);
				}

				if (base.has_field.has_field (2)) {
					base.serialize.write_string (this.ip, 2);
				}

				if (base.has_field.has_field (3)) {
					base.serialize.write_integer (this.port, 3);
				}

				return base.serialize.close ();
			}
		}


	}


	public class unitPass : SprotoTypeBase {
		private static int max_field_count = 2;
		
		
		private Int64 _index; // tag 0
		public Int64 index {
			get { return _index; }
			set { base.has_field.set_field (0, true); _index = value; }
		}
		public bool HasIndex {
			get { return base.has_field.has_field (0); }
		}

		private bool _isPass; // tag 1
		public bool isPass {
			get { return _isPass; }
			set { base.has_field.set_field (1, true); _isPass = value; }
		}
		public bool HasIsPass {
			get { return base.has_field.has_field (1); }
		}

		public unitPass () : base(max_field_count) {}

		public unitPass (byte[] buffer) : base(max_field_count, buffer) {
			this.decode ();
		}

		protected override void decode () {
			int tag = -1;
			while (-1 != (tag = base.deserialize.read_tag ())) {
				switch (tag) {
				case 0:
					this.index = base.deserialize.read_integer ();
					break;
				case 1:
					this.isPass = base.deserialize.read_boolean ();
					break;
				default:
					base.deserialize.read_unknow_data ();
					break;
				}
			}
		}

		public override int encode (SprotoStream stream) {
			base.serialize.open (stream);

			if (base.has_field.has_field (0)) {
				base.serialize.write_integer (this.index, 0);
			}

			if (base.has_field.has_field (1)) {
				base.serialize.write_boolean (this.isPass, 1);
			}

			return base.serialize.close ();
		}
	}


}


public class ProtoProtocol : ProtocolBase {
	public static  ProtoProtocol Instance = new ProtoProtocol();
	private ProtoProtocol() {
		Protocol.SetProtocol<BeginClone> (BeginClone.Tag);
		Protocol.SetResponse<ProtoSprotoType.BeginClone.response> (BeginClone.Tag);

		Protocol.SetProtocol<BuyItemByShop> (BuyItemByShop.Tag);
		Protocol.SetRequest<ProtoSprotoType.BuyItemByShop.request> (BuyItemByShop.Tag);
		Protocol.SetResponse<ProtoSprotoType.BuyItemByShop.response> (BuyItemByShop.Tag);

		Protocol.SetProtocol<ChangeRoleInfo> (ChangeRoleInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.ChangeRoleInfo.request> (ChangeRoleInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.ChangeRoleInfo.response> (ChangeRoleInfo.Tag);

		Protocol.SetProtocol<ClearMoudleInfo> (ClearMoudleInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.ClearMoudleInfo.request> (ClearMoudleInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.ClearMoudleInfo.response> (ClearMoudleInfo.Tag);

		Protocol.SetProtocol<DeleteItem> (DeleteItem.Tag);
		Protocol.SetRequest<ProtoSprotoType.DeleteItem.request> (DeleteItem.Tag);
		Protocol.SetResponse<ProtoSprotoType.DeleteItem.response> (DeleteItem.Tag);

		Protocol.SetProtocol<GetBagInfo> (GetBagInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetBagInfo.response> (GetBagInfo.Tag);

		Protocol.SetProtocol<GetCloneInfo> (GetCloneInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetCloneInfo.response> (GetCloneInfo.Tag);

		Protocol.SetProtocol<GetGradeInfo> (GetGradeInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetGradeInfo.request> (GetGradeInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetGradeInfo.response> (GetGradeInfo.Tag);

		Protocol.SetProtocol<GetHistoryAccumulate> (GetHistoryAccumulate.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetHistoryAccumulate.response> (GetHistoryAccumulate.Tag);

		Protocol.SetProtocol<GetLearnInfo> (GetLearnInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetLearnInfo.response> (GetLearnInfo.Tag);

		Protocol.SetProtocol<GetLevelPassInfo> (GetLevelPassInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetLevelPassInfo.request> (GetLevelPassInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetLevelPassInfo.response> (GetLevelPassInfo.Tag);

		Protocol.SetProtocol<GetModuleFourInfo> (GetModuleFourInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetModuleFourInfo.request> (GetModuleFourInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetModuleFourInfo.response> (GetModuleFourInfo.Tag);

		Protocol.SetProtocol<GetMoudleInfo> (GetMoudleInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetMoudleInfo.request> (GetMoudleInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetMoudleInfo.response> (GetMoudleInfo.Tag);

		Protocol.SetProtocol<GetMoudleReward> (GetMoudleReward.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetMoudleReward.request> (GetMoudleReward.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetMoudleReward.response> (GetMoudleReward.Tag);

		Protocol.SetProtocol<GetNoticeInfo> (GetNoticeInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetNoticeInfo.response> (GetNoticeInfo.Tag);

		Protocol.SetProtocol<GetResultInfo> (GetResultInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetResultInfo.request> (GetResultInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetResultInfo.response> (GetResultInfo.Tag);

		Protocol.SetProtocol<GetShopList> (GetShopList.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetShopList.response> (GetShopList.Tag);

		Protocol.SetProtocol<GetTermPassInfo> (GetTermPassInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetTermPassInfo.request> (GetTermPassInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetTermPassInfo.response> (GetTermPassInfo.Tag);

		Protocol.SetProtocol<GetTimeScoreInfo> (GetTimeScoreInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetTimeScoreInfo.request> (GetTimeScoreInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetTimeScoreInfo.response> (GetTimeScoreInfo.Tag);

		Protocol.SetProtocol<GetUnitPassInfo> (GetUnitPassInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.GetUnitPassInfo.request> (GetUnitPassInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.GetUnitPassInfo.response> (GetUnitPassInfo.Tag);

		Protocol.SetProtocol<ReceiveNoticeReward> (ReceiveNoticeReward.Tag);
		Protocol.SetResponse<ProtoSprotoType.ReceiveNoticeReward.response> (ReceiveNoticeReward.Tag);

		Protocol.SetProtocol<SaveMoudleCostTime> (SaveMoudleCostTime.Tag);
		Protocol.SetRequest<ProtoSprotoType.SaveMoudleCostTime.request> (SaveMoudleCostTime.Tag);
		Protocol.SetResponse<ProtoSprotoType.SaveMoudleCostTime.response> (SaveMoudleCostTime.Tag);

		Protocol.SetProtocol<SendLearnResultInfo> (SendLearnResultInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.SendLearnResultInfo.request> (SendLearnResultInfo.Tag);
		Protocol.SetResponse<ProtoSprotoType.SendLearnResultInfo.response> (SendLearnResultInfo.Tag);

		Protocol.SetProtocol<SyncDiamond> (SyncDiamond.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncDiamond.request> (SyncDiamond.Tag);

		Protocol.SetProtocol<SyncMoudle1Info> (SyncMoudle1Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle1Info.request> (SyncMoudle1Info.Tag);

		Protocol.SetProtocol<SyncMoudle2Info> (SyncMoudle2Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle2Info.request> (SyncMoudle2Info.Tag);

		Protocol.SetProtocol<SyncMoudle3Info> (SyncMoudle3Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle3Info.request> (SyncMoudle3Info.Tag);

		Protocol.SetProtocol<SyncMoudle4Info> (SyncMoudle4Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle4Info.request> (SyncMoudle4Info.Tag);

		Protocol.SetProtocol<SyncMoudle5Info> (SyncMoudle5Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle5Info.request> (SyncMoudle5Info.Tag);

		Protocol.SetProtocol<SyncMoudle6Info> (SyncMoudle6Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle6Info.request> (SyncMoudle6Info.Tag);

		Protocol.SetProtocol<SyncMoudle7Info> (SyncMoudle7Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle7Info.request> (SyncMoudle7Info.Tag);

		Protocol.SetProtocol<SyncMoudle8Info> (SyncMoudle8Info.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncMoudle8Info.request> (SyncMoudle8Info.Tag);

		Protocol.SetProtocol<SyncPayInfo> (SyncPayInfo.Tag);
		Protocol.SetRequest<ProtoSprotoType.SyncPayInfo.request> (SyncPayInfo.Tag);

		Protocol.SetProtocol<auth> (auth.Tag);
		Protocol.SetRequest<ProtoSprotoType.auth.request> (auth.Tag);
		Protocol.SetResponse<ProtoSprotoType.auth.response> (auth.Tag);

		Protocol.SetProtocol<challenge> (challenge.Tag);
		Protocol.SetRequest<ProtoSprotoType.challenge.request> (challenge.Tag);
		Protocol.SetResponse<ProtoSprotoType.challenge.response> (challenge.Tag);

		Protocol.SetProtocol<client_user_info> (client_user_info.Tag);
		Protocol.SetRequest<ProtoSprotoType.client_user_info.request> (client_user_info.Tag);

		Protocol.SetProtocol<handshake> (handshake.Tag);
		Protocol.SetRequest<ProtoSprotoType.handshake.request> (handshake.Tag);
		Protocol.SetResponse<ProtoSprotoType.handshake.response> (handshake.Tag);

		Protocol.SetProtocol<heartbeat> (heartbeat.Tag);
		Protocol.SetResponse<ProtoSprotoType.heartbeat.response> (heartbeat.Tag);

		Protocol.SetProtocol<login> (login.Tag);
		Protocol.SetRequest<ProtoSprotoType.login.request> (login.Tag);

		Protocol.SetProtocol<login_user_center> (login_user_center.Tag);
		Protocol.SetRequest<ProtoSprotoType.login_user_center.request> (login_user_center.Tag);
		Protocol.SetResponse<ProtoSprotoType.login_user_center.response> (login_user_center.Tag);

		Protocol.SetProtocol<logintest> (logintest.Tag);
		Protocol.SetRequest<ProtoSprotoType.logintest.request> (logintest.Tag);
		Protocol.SetResponse<ProtoSprotoType.logintest.response> (logintest.Tag);

		Protocol.SetProtocol<sync_role_offline> (sync_role_offline.Tag);

		Protocol.SetProtocol<travelerLogin> (travelerLogin.Tag);
		Protocol.SetResponse<ProtoSprotoType.travelerLogin.response> (travelerLogin.Tag);

	}

	public class BeginClone {
		public const int Tag = 37;
	}

	public class BuyItemByShop {
		public const int Tag = 35;
	}

	public class ChangeRoleInfo {
		public const int Tag = 43;
	}

	public class ClearMoudleInfo {
		public const int Tag = 30;
	}

	public class DeleteItem {
		public const int Tag = 36;
	}

	public class GetBagInfo {
		public const int Tag = 31;
	}

	public class GetCloneInfo {
		public const int Tag = 38;
	}

	public class GetGradeInfo {
		public const int Tag = 21;
	}

	public class GetHistoryAccumulate {
		public const int Tag = 40;
	}

	public class GetLearnInfo {
		public const int Tag = 20;
	}

	public class GetLevelPassInfo {
		public const int Tag = 26;
	}

	public class GetModuleFourInfo {
		public const int Tag = 28;
	}

	public class GetMoudleInfo {
		public const int Tag = 22;
	}

	public class GetMoudleReward {
		public const int Tag = 29;
	}

	public class GetNoticeInfo {
		public const int Tag = 42;
	}

	public class GetResultInfo {
		public const int Tag = 24;
	}

	public class GetShopList {
		public const int Tag = 32;
	}

	public class GetTermPassInfo {
		public const int Tag = 33;
	}

	public class GetTimeScoreInfo {
		public const int Tag = 27;
	}

	public class GetUnitPassInfo {
		public const int Tag = 34;
	}

	public class ReceiveNoticeReward {
		public const int Tag = 41;
	}

	public class SaveMoudleCostTime {
		public const int Tag = 39;
	}

	public class SendLearnResultInfo {
		public const int Tag = 23;
	}

	public class SyncDiamond {
		public const int Tag = 209;
	}

	public class SyncMoudle1Info {
		public const int Tag = 201;
	}

	public class SyncMoudle2Info {
		public const int Tag = 202;
	}

	public class SyncMoudle3Info {
		public const int Tag = 203;
	}

	public class SyncMoudle4Info {
		public const int Tag = 204;
	}

	public class SyncMoudle5Info {
		public const int Tag = 205;
	}

	public class SyncMoudle6Info {
		public const int Tag = 206;
	}

	public class SyncMoudle7Info {
		public const int Tag = 207;
	}

	public class SyncMoudle8Info {
		public const int Tag = 208;
	}

	public class SyncPayInfo {
		public const int Tag = 210;
	}

	public class auth {
		public const int Tag = 2;
	}

	public class challenge {
		public const int Tag = 3;
	}

	public class client_user_info {
		public const int Tag = 200;
	}

	public class handshake {
		public const int Tag = 1;
	}

	public class heartbeat {
		public const int Tag = 199;
	}

	public class login {
		public const int Tag = 4;
	}

	public class login_user_center {
		public const int Tag = 6;
	}

	public class logintest {
		public const int Tag = 5;
	}

	public class sync_role_offline {
		public const int Tag = 300;
	}

	public class travelerLogin {
		public const int Tag = 7;
	}

}